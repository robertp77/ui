{"remainingRequest":"C:\\Users\\arobu\\portfolio_rap55\\finalproject\\ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\arobu\\portfolio_rap55\\finalproject\\ui\\src\\components\\TheMap.vue?vue&type=style&index=0&id=26f56046&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\arobu\\portfolio_rap55\\finalproject\\ui\\src\\components\\TheMap.vue","mtime":1619649678944},{"path":"C:\\Users\\arobu\\portfolio_rap55\\finalproject\\ui\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\arobu\\portfolio_rap55\\finalproject\\ui\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\arobu\\portfolio_rap55\\finalproject\\ui\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\arobu\\portfolio_rap55\\finalproject\\ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\arobu\\portfolio_rap55\\finalproject\\ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KI21hcENvbnRhaW5lciB7DQogd2lkdGg6IDgwdnc7DQogaGVpZ2h0OiAxMDB2aDsNCn0NCiNyZXF1ZXN0IHsNCiAgICBwb3NpdGlvbjogYWJzb2x1dGU7DQogICAgYm90dG9tOiAzNzBweDsNCiAgICB3aWR0aDogMTAlOw0KICAgIHotaW5kZXg6IDk5OTk7DQp9DQo="},{"version":3,"sources":["TheMap.vue"],"names":[],"mappingsknBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"TheMap.vue","sourceRoot":"src/components","sourcesContent":["/*\r\n * This represents displaying a group of links.\r\n *\r\n * This is an example of a convenience component that serves to organize the data hierarchy.\r\n * It re-emits the custom events of its child components, adding its own information to them\r\n * to provide for future data accessor methods.\r\n *\r\n * @author Dennis Quan\r\n * @author Robert Duvall\r\n */\r\n\r\n// display group as a column or cards that is organized by BootstrapVue\r\n<template>\r\n    <div id=\"mapwrap\">\r\n        <header>\r\n            <h1>{{score}} miles available for ride requests. Complete ride requests on the map to earn more miles!</h1>\r\n        </header>\r\n        <div id=\"mapContainer\"></div>\r\n        <b-button id=\"request\" @click=\"setpickup\">{{reqstatus}}</b-button>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport * as L from 'leaflet';\r\nimport { GeoSearchControl, OpenStreetMapProvider } from 'leaflet-geosearch';\r\nimport '../../node_modules/leaflet/dist/leaflet.css';\r\nimport '../../node_modules/leaflet-geosearch/dist/geosearch.css';\r\nimport { linkDataStore } from '../data/LinkDataStore.js'\r\nimport image from './Images/pin.png' \r\n//import { getJSON } from './apiHelper';\r\nexport default {\r\n    name: 'TheMap',\r\n    data () {\r\n        return {\r\n            // backing data for edits using v-model, no copy needed since Strings are immutable\r\n            allLinks: linkDataStore,\r\n            map: 'test',\r\n            pickuploc:'init',\r\n            reqstatus: 'request ride',\r\n            provider: 'test',\r\n            searchControl: 'test',\r\n            reqpickuploc:'test',\r\n            reqdropoffloc:'test',\r\n            thert:'test',\r\n            pickuplat:0,\r\n            pickuplong:0,\r\n            lat:0,\r\n            long:0,\r\n            userid:\"\",\r\n            ispick:\"\",\r\n            thepopup:\"\",\r\n            thegiveridepopups:[],\r\n            cost:\"\",\r\n            riderid:\"\",\r\n            enroute:false,\r\n            thebtns:[],\r\n            inds:[],\r\n            yesbtns:[],\r\n            nobtns:[],\r\n            containers:[],\r\n            giving:false,\r\n            okbtns:[],\r\n            loggedin:false,\r\n            loggedin2:false,\r\n            requested:false,\r\n            theuserid:{},\r\n            otherreqstatus:false,\r\n            score:15\r\n            // may also need a copy group information if there is any chance it might be changed interactively\r\n        };\r\n    },\r\n    methods: {\r\n        // emit event that signals a new link is ready to be added\r\n        // NOTE, error checking is done in the child component\r\n        async getrides(){\r\n            const response = await fetch('https://safe-river-16409.herokuapp.com/api/getLinks')//?lat='+this.lat+'&long='+this.long);\r\n            return response.json();\r\n        },\r\n        async getriderlat(id){\r\n            const response = await fetch('https://safe-river-16409.herokuapp.com/api/getriderlat?id='+id);\r\n            return response.json();\r\n        },\r\n        async getriderlong(id){\r\n            const response = await fetch('https://safe-river-16409.herokuapp.com/api/getriderlong?id='+id);\r\n            return response.json();\r\n        },\r\n        work(value){\r\n            console.log(value.location)\r\n            this.pickuploc.setLatLng([value.location.y,value.location.x])\r\n        },\r\n        updatePoly(oldLatLng){\r\n            this.thert.remove()\r\n            this.thert=L.polygon([\r\n                [this.pickuplat, this.pickuplong],\r\n                [oldLatLng.latlng.lat, oldLatLng.latlng.lng]\r\n            ]).addTo(this.map);\r\n        },\r\n        conpick(){\r\n            this.pickuploc.on('move',this.confirm2)\r\n            this.pickuplat=this.pickuploc.getLatLng().lat\r\n            this.pickuplong=this.pickuploc.getLatLng().lng\r\n            this.thert=L.polygon([\r\n                [this.pickuplat, this.pickuplong],\r\n                [this.pickuplat, this.pickuplong+0.003]\r\n            ]).addTo(this.map);\r\n            this.reqpickuploc=L.circle([this.pickuplat, this.pickuplong], {\r\n                color: 'green',\r\n                fillColor: 'green',\r\n                fillOpacity: 0.5,\r\n                radius: 25,\r\n            }).addTo(this.map);\r\n            //console.log(this.pickuploc.getLatLng().lat)\r\n            this.pickuploc.setLatLng([this.pickuplat,this.pickuplong+0.003])\r\n            this.pickuploc.on('move',this.updatePoly)\r\n            this.thepopup.setLatLng([this.pickuplat+(0.003/(this.map.getZoom()**9))*(13**9),this.pickuplong+0.003])\r\n            var container = L.DomUtil.create('div')\r\n            var btn = L.DomUtil.create('button', '', container);\r\n            var btn2 = L.DomUtil.create('button', '', container);\r\n            btn.setAttribute('type', 'button');\r\n            btn2.setAttribute('type', 'button');\r\n            btn.innerHTML = 'confirm dropoff';\r\n            btn2.innerHTML = 'cancel';\r\n            L.DomEvent.on(btn, 'click', () => {\r\n                this.condrop()\r\n            });\r\n            L.DomEvent.on(btn2, 'click', () => {\r\n                this.reqpickuploc.remove()\r\n                this.thert.remove()\r\n                this.pickuploc.remove()\r\n                this.otherreqstatus=false\r\n                this.thepopup.remove()\r\n            });\r\n            var newDiv = document.createElement(\"div\");\r\n            newDiv.appendChild(btn);\r\n            newDiv.appendChild(btn2);\r\n            this.thepopup.setContent(newDiv)\r\n            this.thepopup.openOn(this.map)\r\n        },\r\n        async condrop(){\r\n            if(this.theuserid==undefined&&this.loggedin2==false){\r\n                window.location.assign(\"/api/auth/login\")\r\n                this.loggedin2=true\r\n                const theuserid = await this.use();\r\n                this.theuserid=theuserid.id\r\n                await this.condrop()\r\n            }\r\n            else if(this.theuserid==undefined&&this.loggedin2==true){\r\n                const theuserid = await this.use();\r\n                this.theuserid=theuserid.id\r\n                console.log(this.theuserid)\r\n                await this.condrop()\r\n            }\r\n            else{\r\n                this.givingans=await this.getgive()\r\n                if(this.givingans.requested==undefined){\r\n                    this.requested=false\r\n                }\r\n                else if(this.givingans.requested=='False'){\r\n                    this.requested=false\r\n                }\r\n                else{\r\n                    this.requested=true\r\n                }\r\n                if(this.requested==false){\r\n                    await fetch('https://safe-river-16409.herokuapp.com/api/changerequested')\r\n                    this.reqdropoffloc=L.circle([this.pickuploc.getLatLng().lat, this.pickuploc.getLatLng().lng], {\r\n                        color: 'red',\r\n                        fillColor: 'red',\r\n                        fillOpacity: 0.5,\r\n                        radius: 25,\r\n                    }).addTo(this.map);\r\n                    this.thepopup.remove()\r\n                    this.pickuploc.remove()\r\n                    this.reqstatus='cancel request (5 mile penalty)'\r\n                    this.requested=true\r\n                    this.otherreqstatus=false\r\n                    this.oldscore=await this.getscore()\r\n                    await fetch('https://safe-river-16409.herokuapp.com/api/sendride?requestedpickuplat='+this.pickuplat+'&requestedpickuplong='+this.pickuplong+'&requesteddropofflat='+this.pickuploc.getLatLng().lat+'&requesteddropofflong='+this.pickuploc.getLatLng().lng)\r\n                    await this.checkriderdest(this.oldscore)\r\n                }\r\n                else{\r\n                    alert('You have already requested a ride')\r\n                }\r\n            }\r\n        },\r\n        async waitfordriver(oldscore){\r\n            this.score=await this.getscore()\r\n            if(this.score==oldscore){\r\n                await this.waitfordriver(oldscore)\r\n            }\r\n            else{\r\n                console.log('success')\r\n            }\r\n        },\r\n        async getscore(){\r\n            const response=await fetch('https://safe-river-16409.herokuapp.com/api/grabscore')\r\n            return response.json()\r\n        },\r\n        async checkriderdest(oldscore){\r\n            this.lat=await this.allLinks.getnewlat(this.theuserid);\r\n            this.long=await this.allLinks.getnewlng(this.theuserid);\r\n            this.userposition.setLatLng([this.lat,this.lng])\r\n            this.score=await this.getscore()\r\n            //this.let=lat\r\n            //this.long=long\r\n            const dist=((this.requesteddropofflat-this.lat)**2+(this.requesteddropofflong-this.long)**2)**0.5\r\n            if(dist<0.003){\r\n                this.requested=false\r\n                await fetch('https://safe-river-16409.herokuapp.com/api/changerequestedfalse')\r\n                if(this.score==oldscore){\r\n                    await this.waitfordriver(oldscore)\r\n                }\r\n            }\r\n            else{\r\n                await this.checkriderdest()\r\n            }\r\n        },\r\n        async acgiveride(n,name,rplat,rplong,rdlat,rdlong){\r\n            this.lat=await this.allLinks.getnewlat(this.theuserid);\r\n            this.long=await this.allLinks.getnewlng(this.theuserid);\r\n            const dist=((rplat-this.lat)**2+(rplong-this.long)**2)**0.5\r\n            const distmiles1=(((rplat-this.lat)*69.172)**2+((rplong-this.long)*(Math.cos(((rplat-this.lat)/2)*(Math.PI/180)))*69.172)**2)**0.5\r\n            this.thegiveridepopups[n].setContent('Go to'+name+'('+distmiles1+'miles away)')\r\n            if(dist<0.003){\r\n                this.enroute=true\r\n                const distmiles=(((rplat-rdlat)*69.172)**2+((rplong-rdlong)*(Math.cos(((rplat-rdlat)/2)*(Math.PI/180)))*69.172)**2)**0.5\r\n                this.cost=distmiles\r\n                this.thegiveridepopups[n].setContent('Drive'+name+'to the destination('+distmiles+'miles away)')\r\n                await this.checkdest(n,name,rdlat,rdlong)\r\n            }\r\n            else{\r\n                await this.acgiveride(n,name,rplat,rplong,rdlat,rdlong)\r\n            }\r\n        },\r\n        async getgive(){\r\n            const response=await fetch('https://safe-river-16409.herokuapp.com/api/getusergive')\r\n            return response.json()\r\n        },\r\n        async beforeacgiveride(n,name,rplat,rplong,rdlat,rdlong){\r\n            const theuserid = await this.use();\r\n            this.theuserid=theuserid.id\r\n            if(this.theuserid==undefined&&this.loggedin==false){\r\n                window.location.assign(\"/api/auth/login\")\r\n                this.loggedin=true\r\n                await this.beforeacgiveride(n,name,rplat,rplong,rdlat,rdlong)\r\n            }\r\n            else if(this.theuserid==undefined&&this.loggedin==true){\r\n                const theuserid = await this.use();\r\n                this.theuserid=theuserid.id\r\n                await this.beforeacgiveride(n,name,rplat,rplong,rdlat,rdlong)\r\n            }\r\n            else{\r\n                this.givingans=await this.getgive()\r\n                if(this.givingans.giving==undefined){\r\n                    this.giving=false\r\n                }\r\n                else if(this.givingans.giving=='False'){\r\n                    this.giving=false\r\n                }\r\n                else{\r\n                    this.giving=true\r\n                }\r\n                console.log(this.giving)\r\n                if(this.givingans.requested==undefined){\r\n                    this.requested=false\r\n                }\r\n                else if(this.givingans.requested=='False'){\r\n                    this.requested=false\r\n                }\r\n                else{\r\n                    this.requested=true\r\n                }\r\n                if(this.giving==false&&this.requested==false){\r\n                    this.giving=true\r\n                    await fetch('https://safe-river-16409.herokuapp.com/api/changegive')\r\n                    await this.acgiveride(n,name,rplat,rplong,rdlat,rdlong)\r\n                }\r\n                else if(this.giving==true&&this.requested==false){\r\n                    L.DomEvent.on(this.okbtns[n], 'click', () => {\r\n                        this.goback(n)\r\n                    });\r\n                    var newDiv = document.createElement(\"div\");\r\n                    var newContent = document.createTextNode(\"Error: you must complete your current ride first.\");\r\n                    newDiv.appendChild(newContent);\r\n                    newDiv.appendChild(this.okbtns[n]);\r\n                    this.thegiveridepopups[n].setContent(newDiv)\r\n                }\r\n                else{\r\n                    L.DomEvent.on(this.okbtns[n], 'click', () => {\r\n                        this.goback(n)\r\n                    });\r\n                    var newwDiv = document.createElement(\"div\");\r\n                    var newwContent = document.createTextNode(\"Error: you must cancel your current ride request or complete it in order to give a ride.\");\r\n                    newwDiv.appendChild(newwContent);\r\n                    newwDiv.appendChild(this.okbtns[n]);\r\n                    this.thegiveridepopups[n].setContent(newwDiv)\r\n                }\r\n            }\r\n        },\r\n        async giveride(n,val,name,rplat,rplong,rdlat,rdlong){\r\n            this.riderid=val\r\n            L.DomEvent.on(this.yesbtns[n], 'click', () => {\r\n                this.beforeacgiveride(n,name,rplat,rplong,rdlat,rdlong)\r\n            });\r\n            L.DomEvent.on(this.nobtns[n], 'click', () => {\r\n                this.goback(n)\r\n            });\r\n            var newDiv = document.createElement(\"div\");\r\n            var newContent = document.createTextNode(\"Are your sure? Other users can tell if you failed to complete this ride.\");\r\n            newDiv.appendChild(newContent);\r\n            newDiv.appendChild(this.yesbtns[n]);\r\n            newDiv.appendChild(this.nobtns[n]);\r\n            this.thegiveridepopups[n].setContent(newDiv)\r\n        },\r\n        async checkdest(n,val,rdlat,rdlong){\r\n            const riderlat=await this.getriderlat(this.riderid);\r\n            const riderlong=await this.getriderlong(this.riderid);\r\n            this.lat=await this.allLinks.getnewlat(this.theuserid);\r\n            this.long=await this.allLinks.getnewlng(this.theuserid);\r\n            this.userposition.setLatLng([this.lat,this.lng])\r\n            const dist=((riderlat-rdlat)**2+(riderlong-rdlong)**2)**0.5\r\n            const distmiles=(((riderlat-rdlat)*69.172)**2+((riderlong-rdlong)*(Math.cos(((riderlat-rdlat)/2)*(Math.PI/180)))*69.172)**2)**0.5\r\n            if(dist<0.003){\r\n                this.giving=false\r\n                await fetch('https://safe-river-16409.herokuapp.com/api/changegivefalse')\r\n                await fetch('https://safe-river-16409.herokuapp.com/api/finished?cost='+this.cost+'&driver='+this.theuserid+'&rider='+this.riderid)\r\n                this.score=await this.getscore()\r\n            }\r\n            else{\r\n                this.thegiveridepopups[n].setContent('Drive'+val+'to the destination('+distmiles+'miles away)')\r\n                this.thegiveridepopups[n].setLatLng([riderlat,riderlong])\r\n                await this.checkdest(rdlat,rdlong)\r\n            }\r\n        },\r\n        async use(){\r\n            const response=await fetch('https://safe-river-16409.herokuapp.com/api/user')\r\n            return response.json()\r\n        },\r\n        goback(n){\r\n            this.thegiveridepopups[n].setContent(this.thebtns[n])\r\n        },\r\n        confirm(val){\r\n            this.thepopup.setLatLng([val.latlng.lat+(0.003/(this.map.getZoom()**9))*(13**9),val.latlng.lng])\r\n            //this.map.openPopup('<b-button id=\"test\" @click=\"test\">test</b-button>',[val.latlng.lat+0.003,val.latlng.lng],{closeButton: false, closeOnClick: false})\r\n            var container = L.DomUtil.create('div')\r\n            var btn = L.DomUtil.create('button', '', container);\r\n            var btn2 = L.DomUtil.create('button', '', container);\r\n            btn.setAttribute('type', 'button');\r\n            btn2.setAttribute('type', 'button');\r\n            btn.innerHTML = 'confirm pickup';\r\n            btn2.innerHTML = 'cancel';\r\n            L.DomEvent.on(btn, 'click', () => {\r\n                this.conpick()\r\n            });\r\n            L.DomEvent.on(btn2, 'click', () => {\r\n                this.thepopup.remove()\r\n                this.pickuploc.remove()\r\n                this.otherreqstatus=false\r\n            });\r\n            var newDiv = document.createElement(\"div\");\r\n            newDiv.appendChild(btn);\r\n            newDiv.appendChild(btn2);\r\n            this.thepopup.setContent(newDiv)\r\n            this.thepopup.openOn(this.map)\r\n        },\r\n        confirm2(val){\r\n            this.thepopup.setLatLng([val.latlng.lat+(0.003/(this.map.getZoom()**9))*(13**9),val.latlng.lng])\r\n            //this.map.openPopup('<b-button id=\"test\" @click=\"test\">test</b-button>',[val.latlng.lat+0.003,val.latlng.lng],{closeButton: false, closeOnClick: false})\r\n            var container = L.DomUtil.create('div')\r\n            var btn = L.DomUtil.create('button', '', container);\r\n            var btn2 = L.DomUtil.create('button', '', container);\r\n            btn.setAttribute('type', 'button');\r\n            btn2.setAttribute('type', 'button');\r\n            btn.innerHTML = 'confirm dropoff';\r\n            btn2.innerHTML = 'cancel';\r\n            L.DomEvent.on(btn, 'click', () => {\r\n                this.condrop()\r\n            });\r\n            L.DomEvent.on(btn2, 'click', () => {\r\n                this.reqpickuploc.remove()\r\n                this.thert.remove()\r\n                this.thepopup.remove()\r\n                this.pickuploc.remove()\r\n                this.otherreqstatus=false\r\n            });\r\n            var newDiv = document.createElement(\"div\");\r\n            newDiv.appendChild(btn);\r\n            newDiv.appendChild(btn2);\r\n            this.thepopup.setContent(newDiv)\r\n            this.thepopup.openOn(this.map)\r\n        },\r\n        changepop(){\r\n            this.thepopup.setLatLng([this.pickuploc.getLatLng().lat+(0.003/(this.map.getZoom()**9))*(13**9), this.pickuploc.getLatLng().lng])\r\n        },\r\n        async setpickup(){\r\n            if(this.theuserid==undefined){\r\n                this.requested=false\r\n            }\r\n            else{\r\n                this.givingans=await this.getgive()\r\n                console.log(this.givingans.requested)\r\n                if(this.givingans.requested==undefined){\r\n                    this.requested=false\r\n                }\r\n                else if(this.givingans.requested=='False'){\r\n                    this.requested=false\r\n                }\r\n                else{\r\n                    this.requested=true\r\n                }\r\n            } \r\n            if(this.requested==false&&this.otherreqstatus==false){\r\n                this.otherreqstatus=true\r\n                let pinIcon = L.icon({\r\n                    iconUrl: image,\r\n                    iconSize: [20,20],\r\n                    iconAnchor: [10.5,20]\r\n                });\r\n                this.pickuploc = L.marker([this.lat, this.long], {\r\n                    icon: pinIcon,\r\n                    draggable: 'True'\r\n                }).addTo(this.map);\r\n                this.provider = new OpenStreetMapProvider();\r\n                this.searchControl = new GeoSearchControl({\r\n                    provider: this.provider,\r\n                    showMarker: false\r\n                });\r\n                this.map.addControl(this.searchControl);\r\n                this.map.on('geosearch/showlocation', this.work);\r\n                //this.map.openPopup('<p>test</p>',[this.pickuploc.getLatLng().lat+0.003,this.pickuploc.getLatLng().lng],{closeButton: false, closeOnClick: false})\r\n                this.thepopup=L.popup({closeButton:false,closeOnClick:false});\r\n                this.thepopup.setLatLng([this.lat+(0.003/(this.map.getZoom()**9))*(13**9), this.long])\r\n                this.map.on('zoomend',this.changepop)\r\n                //this.map.openPopup('<b-button id=\"test\" @click=\"test\">test</b-button>',[val.latlng.lat+0.003,val.latlng.lng],{closeButton: false, closeOnClick: false})\r\n                var container = L.DomUtil.create('div')\r\n                var btn = L.DomUtil.create('button', '', container);\r\n                var btn2 = L.DomUtil.create('button', '', container);\r\n                btn.setAttribute('type', 'button');\r\n                btn2.setAttribute('type', 'button');\r\n                btn.innerHTML = 'confirm pickup';\r\n                btn2.innerHTML = 'cancel';\r\n                L.DomEvent.on(btn, 'click', () => {\r\n                    this.conpick()\r\n                });\r\n                L.DomEvent.on(btn2, 'click', () => {\r\n                    this.pickuploc.remove()\r\n                });\r\n                var newDiv = document.createElement(\"div\");\r\n                newDiv.appendChild(btn);\r\n                newDiv.appendChild(btn2);\r\n                this.thepopup.setContent(newDiv)\r\n                this.thepopup.openOn(this.map)\r\n                this.pickuploc.on('move',this.confirm)\r\n            }\r\n            else if(this.otherreqstatus==true){\r\n                alert('Already requesting, drag pin to set pickup location')\r\n            }\r\n            else{\r\n                this.requested=false\r\n                await fetch('https://safe-river-16409.herokuapp.com/api/changerequestedfalse')\r\n                this.reqstatus='request ride'\r\n                this.otherreqstatus=false\r\n                if(this.reqpickuploc!='test'){\r\n                    this.reqpickuploc.remove()\r\n                    this.reqdropoffloc.remove()\r\n                    this.thert.remove()\r\n                }\r\n            }\r\n        },\r\n        async setupmap(){\r\n            this.map = L.map('mapContainer').setView([this.lat, this.long], 13);\r\n            L.tileLayer('https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token=pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4NXVycTA2emYycXBndHRqcmZ3N3gifQ.rJcFIG214AriISLbB6B5aw', {\r\n                maxZoom: 18,\r\n                attribution: 'Map data &copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors, ' +\r\n                    'Imagery © <a href=\"https://www.mapbox.com/\">Mapbox</a>',\r\n                id: 'mapbox/streets-v11',\r\n                tileSize: 512,\r\n                zoomOffset: -1\r\n            }).addTo(this.map);\r\n            this.userposition = L.circle([this.lat, this.long], {\r\n                color: 'blue',\r\n                fillColor: 'blue',\r\n                fillOpacity: 0.5,\r\n                radius: 25,\r\n            }).addTo(this.map);\r\n            const thedat=await this.getrides()\r\n            var j=0\r\n            //console.log(thedat[0].Location36n79[0])\r\n            for(let i=0;i<Object.values(thedat[0].Location36n79[0]).length;i++){\r\n                this.values=Object.values(thedat[0].Location36n79[0])\r\n                this.inds.push(j)\r\n                //console.log(values[i])\r\n                if(this.values[i][0].requestedpickuplat!=\"\"&&this.values[i][0].requestedpickuplat!=undefined){\r\n                    if(this.values[i][0].name!=this.theuserid){\r\n                        var polygon = L.polygon([\r\n                            [this.values[i][0].requestedpickuplat, this.values[i][0].requestedpickuplong],\r\n                            [this.values[i][0].requesteddropofflat, this.values[i][0].requesteddropofflong]\r\n                        ]).addTo(this.map);\r\n                        //console.log(typeof(values[i][0]))\r\n                        this.thegiveridepopups.push(L.popup({closeButton:false,closeOnClick:false}))\r\n                        //values[i][0].append({ind:j})\r\n                        var container=L.DomUtil.create('div')\r\n                        this.thebtns.push(L.DomUtil.create('button', '', container));\r\n                        this.thebtns[j].setAttribute('type', 'button');\r\n                        this.thebtns[j].innerHTML = 'give ride';\r\n                        L.DomEvent.on(this.thebtns[j], 'click', () => {\r\n                            this.giveride(this.inds[i],this.values[i][0].name,this.values[i][0].acname,this.values[i][0].requestedpickuplat,this.values[i][0].requestedpickuplong,this.values[i][0].requesteddropofflat,this.values[i][0].requesteddropofflong)\r\n                        });\r\n                        this.yesbtns.push(L.DomUtil.create('button', '', container));\r\n                        this.yesbtns[j].setAttribute('type', 'button');\r\n                        this.yesbtns[j].innerHTML = 'Yes';\r\n                        this.nobtns.push(L.DomUtil.create('button', '', container));\r\n                        this.nobtns[j].setAttribute('type', 'button');\r\n                        this.nobtns[j].innerHTML = 'No';\r\n                        this.okbtns.push(L.DomUtil.create('button', '', container));\r\n                        this.okbtns[j].setAttribute('type', 'button');\r\n                        this.okbtns[j].innerHTML = 'OK';\r\n                        this.thegiveridepopups[j].setContent(this.thebtns[j])\r\n                        polygon.bindPopup(this.thegiveridepopups[j]);\r\n                        let circle = L.circle([this.values[i][0].requestedpickuplat, this.values[i][0].requestedpickuplong], {\r\n                            color: 'blue',\r\n                            fillColor: 'blue',\r\n                            fillOpacity: 0.5,\r\n                            radius: 25,\r\n                        }).addTo(this.map);\r\n                        circle.bindPopup(this.thegiveridepopups[j])\r\n                        let circle2 = L.circle([this.values[i][0].requesteddropofflat, this.values[i][0].requesteddropofflong], {\r\n                            color: 'red',\r\n                            fillColor: 'red',\r\n                            fillOpacity: 0.5,\r\n                            radius: 25,\r\n                        }).addTo(this.map);\r\n                        circle2.bindPopup(this.thegiveridepopups[j])\r\n                        j+=1\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        addLink (newLink) {\r\n            console.log(`EVENT: add new item ${newLink.name} to ${this.linkGroup.title}`);\r\n            this.$emit('new-link', this.groupId, newLink);\r\n            // may also do additional work related to logging, interactivity, or other tracking changes\r\n        }\r\n    },\r\n    async mounted () {\r\n        //await this.allLinks.initData();\r\n        const theuserid = await this.use();\r\n        this.theuserid=theuserid.id\r\n        console.log(this.theuserid)\r\n        const newlat=await this.allLinks.getnewlat(this.theuserid);\r\n        const newlng=await this.allLinks.getnewlng(this.theuserid);\r\n        if(this.theuserid!=undefined){\r\n            this.givingans=await this.getgive()\r\n            this.score=await this.getscore()\r\n            if(this.givingans.requested=='True'){\r\n                this.reqstatus='Cancel request (5 mile penalty)'\r\n                this.requested=true\r\n            }\r\n            else{\r\n                this.requested=false\r\n            }\r\n            if(this.givingans.giving=='True'){\r\n                this.giving==true\r\n            }\r\n            else{\r\n                this.giving=false\r\n            }\r\n        }\r\n        //const newlng=await this.allLinks.getlong();\r\n        console.log(newlat)\r\n        this.lat=newlat\r\n        this.long=newlng\r\n        this.setupmap();\r\n        /*\r\n        var thelat=0\r\n        var thelong=0\r\n        console.log(999)\r\n        function success(position) {\r\n            thelat=position.coords.latitude;\r\n            thelong=position.coords.longitude;\r\n        }\r\n        \r\n        function error() {\r\n            console.log('Unable to retrieve your location');\r\n        }\r\n        \r\n        if(!navigator.geolocation) {\r\n            console.log('Geolocation is not supported by your browser');\r\n        } else {\r\n            navigator.geolocation.getCurrentPosition(success, error);\r\n        }\r\n        const mymap = L.map('mapid').setView([thelat, thelong], 13);\r\n        L.tileLayer('https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token=pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4NXVycTA2emYycXBndHRqcmZ3N3gifQ.rJcFIG214AriISLbB6B5aw', {\r\n            maxZoom: 18,\r\n            attribution: 'Map data &copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors, ' +\r\n                'Imagery © <a href=\"https://www.mapbox.com/\">Mapbox</a>',\r\n            id: 'mapbox/streets-v11',\r\n            tileSize: 512,\r\n            zoomOffset: -1\r\n        }).addTo(mymap);\r\n        for(let i=1;i<this.allLinks.data.length;i++){\r\n            var polygon = L.polygon([\r\n            [this.allLinks.data[i].requestedpickuplat, this.allLinks.data.users[i].requestedpickuplong],\r\n            [this.allLinks.data[i].requesteddropofflat, this.allLinks.data.users[i].requesteddropofflong]\r\n            ]).addTo(mymap);\r\n            polygon.bindPopup('<h4>'+this.allLinks.data[i].name+'</h4>').openPopup();\r\n            let circle = L.circle([this.allLinks.data[i].requestedpickuplat, this.allLinks.data[i].requestedpickuplong], {\r\n                color: 'blue',\r\n                fillColor: 'blue',\r\n                fillOpacity: 0.5,\r\n                radius: 25,\r\n            }).addTo(mymap);\r\n            circle.bindPopup('<h4>'+this.allLinks.data[i].name+'</h4>').openPopup();\r\n            let circle2 = L.circle([this.allLinks.data[i].requesteddropofflat, this.allLinks.data[i].requesteddropofflong], {\r\n                color: 'red',\r\n                fillColor: 'red',\r\n                fillOpacity: 0.5,\r\n                radius: 25,\r\n            }).addTo(mymap);\r\n            circle2.bindPopup('<h4>'+this.allLinks.data[i].name+'</h4>').openPopup();\r\n        }\r\n        */\r\n    }\r\n}\r\n</script>\r\n<style scoped>\r\n#mapContainer {\r\n width: 80vw;\r\n height: 100vh;\r\n}\r\n#request {\r\n    position: absolute;\r\n    bottom: 370px;\r\n    width: 10%;\r\n    z-index: 9999;\r\n}\r\n</style>"]}]}