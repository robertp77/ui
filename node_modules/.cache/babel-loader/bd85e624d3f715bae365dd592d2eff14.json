{"remainingRequest":"C:\\Users\\arobu\\portfolio_rap55\\finalproject\\ui\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\arobu\\portfolio_rap55\\finalproject\\ui\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\arobu\\portfolio_rap55\\finalproject\\ui\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\arobu\\portfolio_rap55\\finalproject\\ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\arobu\\portfolio_rap55\\finalproject\\ui\\src\\components\\TheMap.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\arobu\\portfolio_rap55\\finalproject\\ui\\src\\components\\TheMap.vue","mtime":1620822797502},{"path":"C:\\Users\\arobu\\portfolio_rap55\\finalproject\\ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\arobu\\portfolio_rap55\\finalproject\\ui\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\arobu\\portfolio_rap55\\finalproject\\ui\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\arobu\\portfolio_rap55\\finalproject\\ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\arobu\\portfolio_rap55\\finalproject\\ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["TheMap.vue"],"names":[],"mappings":"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","sourcesContent":["/*\r\n * This represents displaying a group of links.\r\n *\r\n * This is an example of a convenience component that serves to organize the data hierarchy.\r\n * It re-emits the custom events of its child components, adding its own information to them\r\n * to provide for future data accessor methods.\r\n *\r\n * @author Dennis Quan\r\n * @author Robert Duvall\r\n */\r\n\r\n// display group as a column or cards that is organized by BootstrapVue\r\n<template>\r\n    <div id=\"mapwrap\">\r\n        <header>\r\n            <h1>{{score}} miles available for ride requests. Complete ride requests on the map to earn more miles! {{isloading}}</h1>\r\n        </header>\r\n        <div id=\"mapContainer\"></div>\r\n        <b-button id=\"request\" @click=\"setpickup\">{{reqstatus}}</b-button>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport * as L from 'leaflet';\r\nimport { GeoSearchControl, OpenStreetMapProvider } from 'leaflet-geosearch';\r\nimport '../../node_modules/leaflet/dist/leaflet.css';\r\nimport '../../node_modules/leaflet-geosearch/dist/geosearch.css';\r\nimport { linkDataStore } from '../data/LinkDataStore.js'\r\nimport image from './Images/pin.png' \r\n//import { getJSON } from './apiHelper';\r\nexport default {\r\n    name: 'TheMap',\r\n    data () {\r\n        return {\r\n            // backing data for edits using v-model, no copy needed since Strings are immutable\r\n            allLinks: linkDataStore,\r\n            map: 'test',\r\n            pickuploc:'init',\r\n            reqstatus: 'request ride',\r\n            provider: 'test',\r\n            searchControl: 'test',\r\n            reqpickuploc:'test',\r\n            reqdropoffloc:'test',\r\n            thert:'test',\r\n            pickuplat:0,\r\n            pickuplong:0,\r\n            lat:0,\r\n            long:0,\r\n            userid:\"\",\r\n            ispick:\"\",\r\n            thepopup:\"\",\r\n            thegiveridepopups:[],\r\n            cost:\"\",\r\n            riderid:\"\",\r\n            enroute:false,\r\n            thebtns:[],\r\n            inds:[],\r\n            yesbtns:[],\r\n            nobtns:[],\r\n            containers:[],\r\n            giving:false,\r\n            okbtns:[],\r\n            loggedin:false,\r\n            loggedin2:false,\r\n            requested:false,\r\n            theuserid:{},\r\n            otherreqstatus:false,\r\n            score:15,\r\n            isloading:'(loading map)'\r\n            // may also need a copy group information if there is any chance it might be changed interactively\r\n        };\r\n    },\r\n    methods: {\r\n        // emit event that signals a new link is ready to be added\r\n        // NOTE, error checking is done in the child component\r\n        async getrides(){\r\n            const response = await fetch('https://safe-river-16409.herokuapp.com/api/getLinks')//?lat='+this.lat+'&long='+this.long);\r\n            return response.json();\r\n        },\r\n        async getriderlat(id){\r\n            const response = await fetch('https://safe-river-16409.herokuapp.com/api/getriderlat?id='+id);\r\n            return response.json();\r\n        },\r\n        async getriderlong(id){\r\n            const response = await fetch('https://safe-river-16409.herokuapp.com/api/getriderlong?id='+id);\r\n            return response.json();\r\n        },\r\n        work(value){\r\n            console.log(value.location)\r\n            this.pickuploc.setLatLng([value.location.y,value.location.x])\r\n        },\r\n        updatePoly(oldLatLng){\r\n            this.thert.remove()\r\n            this.thert=L.polygon([\r\n                [this.pickuplat, this.pickuplong],\r\n                [oldLatLng.latlng.lat, oldLatLng.latlng.lng]\r\n            ]).addTo(this.map);\r\n        },\r\n        conpick(){\r\n            this.pickuploc.on('move',this.confirm2)\r\n            this.pickuplat=this.pickuploc.getLatLng().lat\r\n            this.pickuplong=this.pickuploc.getLatLng().lng\r\n            this.thert=L.polygon([\r\n                [this.pickuplat, this.pickuplong],\r\n                [this.pickuplat, this.pickuplong+0.003]\r\n            ]).addTo(this.map);\r\n            this.reqpickuploc=L.circle([this.pickuplat, this.pickuplong], {\r\n                color: 'green',\r\n                fillColor: 'green',\r\n                fillOpacity: 0.5,\r\n                radius: 25,\r\n            }).addTo(this.map);\r\n            //console.log(this.pickuploc.getLatLng().lat)\r\n            this.pickuploc.setLatLng([this.pickuplat,this.pickuplong+0.003])\r\n            this.pickuploc.on('move',this.updatePoly)\r\n            this.thepopup.setLatLng([this.pickuplat+(0.003/(this.map.getZoom()**9))*(13**9),this.pickuplong+0.003])\r\n            var container = L.DomUtil.create('div')\r\n            var btn = L.DomUtil.create('button', '', container);\r\n            var btn2 = L.DomUtil.create('button', '', container);\r\n            btn.setAttribute('type', 'button');\r\n            btn2.setAttribute('type', 'button');\r\n            btn.innerHTML = 'confirm dropoff';\r\n            btn2.innerHTML = 'cancel';\r\n            L.DomEvent.on(btn, 'click', async () => {\r\n                await this.condrop()\r\n            });\r\n            L.DomEvent.on(btn2, 'click', () => {\r\n                this.reqpickuploc.remove()\r\n                this.thert.remove()\r\n                this.pickuploc.remove()\r\n                this.otherreqstatus=false\r\n                this.thepopup.remove()\r\n            });\r\n            var newDiv = document.createElement(\"div\");\r\n            newDiv.appendChild(btn);\r\n            newDiv.appendChild(btn2);\r\n            this.thepopup.setContent(newDiv)\r\n            this.thepopup.openOn(this.map)\r\n        },\r\n        async condrop(){\r\n            if(this.theuserid==undefined&&this.loggedin2==false){\r\n                window.location.assign(\"https://safe-river-16409.herokuapp.com/api/auth/login\")\r\n                this.loggedin2=true\r\n                const theuserid = await this.use();\r\n                this.theuserid=theuserid.id\r\n                await this.condrop()\r\n            }\r\n            else if(this.theuserid==undefined&&this.loggedin2==true){\r\n                const theuserid = await this.use();\r\n                this.theuserid=theuserid.id\r\n                console.log(this.theuserid)\r\n                await this.condrop()\r\n            }\r\n            else{\r\n                this.givingans=await this.getgive()\r\n                if(this.givingans.requested==undefined){\r\n                    this.requested=false\r\n                }\r\n                else if(this.givingans.requested=='False'){\r\n                    this.requested=false\r\n                }\r\n                else{\r\n                    this.requested=true\r\n                }\r\n                if(this.requested==false){\r\n                    await fetch('https://safe-river-16409.herokuapp.com/api/changerequested',{ credentials: 'include'})\r\n                    this.reqdropoffloc=L.circle([this.pickuploc.getLatLng().lat, this.pickuploc.getLatLng().lng], {\r\n                        color: 'red',\r\n                        fillColor: 'red',\r\n                        fillOpacity: 0.5,\r\n                        radius: 25,\r\n                    }).addTo(this.map);\r\n                    this.thepopup.remove()\r\n                    this.pickuploc.remove()\r\n                    this.reqstatus='cancel request (5 mile penalty)'\r\n                    this.requested=true\r\n                    this.otherreqstatus=false\r\n                    this.oldscore=await this.getscore()\r\n                    await fetch('https://safe-river-16409.herokuapp.com/api/sendride?requestedpickuplat='+this.pickuplat+'&requestedpickuplong='+this.pickuplong+'&requesteddropofflat='+this.pickuploc.getLatLng().lat+'&requesteddropofflong='+this.pickuploc.getLatLng().lng,{ credentials: 'include'})\r\n                    await this.checkriderdest(this.oldscore)\r\n                }\r\n                else{\r\n                    alert('You have already requested a ride')\r\n                }\r\n            }\r\n        },\r\n        async waitfordriver(oldscore){\r\n            this.score=await this.getscore()\r\n            if(this.score==oldscore){\r\n                await this.waitfordriver(oldscore)\r\n            }\r\n            else{\r\n                console.log('success')\r\n            }\r\n        },\r\n        async getscore(){\r\n            const response=await fetch('https://safe-river-16409.herokuapp.com/api/grabscore',{ credentials: 'include'})\r\n            return response.json()\r\n        },\r\n        async checkriderdest(oldscore){\r\n            this.lat=await this.allLinks.getnewlat(this.theuserid);\r\n            this.long=await this.allLinks.getnewlng(this.theuserid);\r\n            this.userposition.setLatLng([this.lat,this.long])\r\n            this.score=await this.getscore()\r\n            //this.let=lat\r\n            //this.long=long\r\n            const dist=((this.requesteddropofflat-this.lat)**2+(this.requesteddropofflong-this.long)**2)**0.5\r\n            if(dist<0.003){\r\n                this.requested=false\r\n                await fetch('https://safe-river-16409.herokuapp.com/api/changerequestedfalse',{ credentials: 'include'})\r\n                if(this.score==oldscore){\r\n                    await this.waitfordriver(oldscore)\r\n                }\r\n            }\r\n            else{\r\n                await this.checkriderdest()\r\n            }\r\n        },\r\n        async acgiveride(n,name,rplat,rplong,rdlat,rdlong){\r\n            this.lat=await this.allLinks.getnewlat(this.theuserid);\r\n            this.long=await this.allLinks.getnewlng(this.theuserid);\r\n            const dist=((rplat-this.lat)**2+(rplong-this.long)**2)**0.5\r\n            const distmiles1=(((rplat-this.lat)*69.172)**2+((rplong-this.long)*(Math.cos(((rplat-this.lat)/2)*(Math.PI/180)))*69.172)**2)**0.5\r\n            this.thegiveridepopups[n].setContent('Go to'+name+'('+distmiles1+'miles away)')\r\n            if(dist<0.003){\r\n                this.enroute=true\r\n                const distmiles=(((rplat-rdlat)*69.172)**2+((rplong-rdlong)*(Math.cos(((rplat-rdlat)/2)*(Math.PI/180)))*69.172)**2)**0.5\r\n                this.cost=distmiles\r\n                this.thegiveridepopups[n].setContent('Drive'+name+'to the destination('+distmiles+'miles away)')\r\n                await this.checkdest(n,name,rdlat,rdlong)\r\n            }\r\n            else{\r\n                await this.acgiveride(n,name,rplat,rplong,rdlat,rdlong)\r\n            }\r\n        },\r\n        async getgive(){\r\n            const response=await fetch('https://safe-river-16409.herokuapp.com/api/getusergive',{ credentials: 'include'})\r\n            return response.json()\r\n        },\r\n        async beforeacgiveride(n,name,rplat,rplong,rdlat,rdlong){\r\n            const theuserid = await this.use();\r\n            this.theuserid=theuserid.id\r\n            if(this.theuserid==undefined&&this.loggedin==false){\r\n                window.location.assign(\"https://safe-river-16409.herokuapp.com/api/auth/login\")\r\n                this.loggedin=true\r\n                await this.beforeacgiveride(n,name,rplat,rplong,rdlat,rdlong)\r\n            }\r\n            else if(this.theuserid==undefined&&this.loggedin==true){\r\n                const theuserid = await this.use();\r\n                this.theuserid=theuserid.id\r\n                await this.beforeacgiveride(n,name,rplat,rplong,rdlat,rdlong)\r\n            }\r\n            else{\r\n                this.givingans=await this.getgive()\r\n                if(this.givingans.giving==undefined){\r\n                    this.giving=false\r\n                }\r\n                else if(this.givingans.giving=='False'){\r\n                    this.giving=false\r\n                }\r\n                else{\r\n                    this.giving=true\r\n                }\r\n                console.log(this.giving)\r\n                if(this.givingans.requested==undefined){\r\n                    this.requested=false\r\n                }\r\n                else if(this.givingans.requested=='False'){\r\n                    this.requested=false\r\n                }\r\n                else{\r\n                    this.requested=true\r\n                }\r\n                if(this.giving==false&&this.requested==false){\r\n                    this.giving=true\r\n                    await fetch('https://safe-river-16409.herokuapp.com/api/changegive',{ credentials: 'include'})\r\n                    await this.acgiveride(n,name,rplat,rplong,rdlat,rdlong)\r\n                }\r\n                else if(this.giving==true&&this.requested==false){\r\n                    L.DomEvent.on(this.okbtns[n], 'click', () => {\r\n                        this.goback(n)\r\n                    });\r\n                    var newDiv = document.createElement(\"div\");\r\n                    var newContent = document.createTextNode(\"Error: you must complete your current ride first.\");\r\n                    newDiv.appendChild(newContent);\r\n                    newDiv.appendChild(this.okbtns[n]);\r\n                    this.thegiveridepopups[n].setContent(newDiv)\r\n                }\r\n                else{\r\n                    L.DomEvent.on(this.okbtns[n], 'click', () => {\r\n                        this.goback(n)\r\n                    });\r\n                    var newwDiv = document.createElement(\"div\");\r\n                    var newwContent = document.createTextNode(\"Error: you must cancel your current ride request or complete it in order to give a ride.\");\r\n                    newwDiv.appendChild(newwContent);\r\n                    newwDiv.appendChild(this.okbtns[n]);\r\n                    this.thegiveridepopups[n].setContent(newwDiv)\r\n                }\r\n            }\r\n        },\r\n        async giveride(n,val,name,rplat,rplong,rdlat,rdlong){\r\n            this.riderid=val\r\n            L.DomEvent.on(this.yesbtns[n], 'click', () => {\r\n                this.beforeacgiveride(n,name,rplat,rplong,rdlat,rdlong)\r\n            });\r\n            L.DomEvent.on(this.nobtns[n], 'click', () => {\r\n                this.goback(n)\r\n            });\r\n            var newDiv = document.createElement(\"div\");\r\n            var newContent = document.createTextNode(\"Are your sure? Other users can tell if you failed to complete this ride.\");\r\n            newDiv.appendChild(newContent);\r\n            newDiv.appendChild(this.yesbtns[n]);\r\n            newDiv.appendChild(this.nobtns[n]);\r\n            this.thegiveridepopups[n].setContent(newDiv)\r\n        },\r\n        async checkdest(n,val,rdlat,rdlong){\r\n            const riderlat=await this.getriderlat(this.riderid);\r\n            const riderlong=await this.getriderlong(this.riderid);\r\n            this.lat=await this.allLinks.getnewlat(this.theuserid);\r\n            this.long=await this.allLinks.getnewlng(this.theuserid);\r\n            this.userposition.setLatLng([this.lat,this.long])\r\n            const dist=((riderlat-rdlat)**2+(riderlong-rdlong)**2)**0.5\r\n            const distmiles=(((riderlat-rdlat)*69.172)**2+((riderlong-rdlong)*(Math.cos(((riderlat-rdlat)/2)*(Math.PI/180)))*69.172)**2)**0.5\r\n            if(dist<0.003){\r\n                this.giving=false\r\n                await fetch('https://safe-river-16409.herokuapp.com/api/changegivefalse',{ credentials: 'include'})\r\n                await fetch('https://safe-river-16409.herokuapp.com/api/finished?cost='+this.cost+'&rider='+this.riderid,{ credentials: 'include'})\r\n                this.score=await this.getscore()\r\n            }\r\n            else{\r\n                this.thegiveridepopups[n].setContent('Drive'+val+'to the destination('+distmiles+'miles away)')\r\n                this.thegiveridepopups[n].setLatLng([riderlat,riderlong])\r\n                await this.checkdest(rdlat,rdlong)\r\n            }\r\n        },\r\n        async use(){\r\n            const response=await fetch('https://safe-river-16409.herokuapp.com/api/user',{ credentials: 'include'})\r\n            return response.json()\r\n        },\r\n        goback(n){\r\n            this.thegiveridepopups[n].setContent(this.thebtns[n])\r\n        },\r\n        confirm(val){\r\n            this.thepopup.setLatLng([val.latlng.lat+(0.003/(this.map.getZoom()**9))*(13**9),val.latlng.lng])\r\n            //this.map.openPopup('<b-button id=\"test\" @click=\"test\">test</b-button>',[val.latlng.lat+0.003,val.latlng.lng],{closeButton: false, closeOnClick: false})\r\n            var container = L.DomUtil.create('div')\r\n            var btn = L.DomUtil.create('button', '', container);\r\n            var btn2 = L.DomUtil.create('button', '', container);\r\n            btn.setAttribute('type', 'button');\r\n            btn2.setAttribute('type', 'button');\r\n            btn.innerHTML = 'confirm pickup';\r\n            btn2.innerHTML = 'cancel';\r\n            L.DomEvent.on(btn, 'click', () => {\r\n                this.conpick()\r\n            });\r\n            L.DomEvent.on(btn2, 'click', () => {\r\n                this.thepopup.remove()\r\n                this.pickuploc.remove()\r\n                this.otherreqstatus=false\r\n            });\r\n            var newDiv = document.createElement(\"div\");\r\n            newDiv.appendChild(btn);\r\n            newDiv.appendChild(btn2);\r\n            this.thepopup.setContent(newDiv)\r\n            this.thepopup.openOn(this.map)\r\n        },\r\n        confirm2(val){\r\n            this.thepopup.setLatLng([val.latlng.lat+(0.003/(this.map.getZoom()**9))*(13**9),val.latlng.lng])\r\n            //this.map.openPopup('<b-button id=\"test\" @click=\"test\">test</b-button>',[val.latlng.lat+0.003,val.latlng.lng],{closeButton: false, closeOnClick: false})\r\n            var container = L.DomUtil.create('div')\r\n            var btn = L.DomUtil.create('button', '', container);\r\n            var btn2 = L.DomUtil.create('button', '', container);\r\n            btn.setAttribute('type', 'button');\r\n            btn2.setAttribute('type', 'button');\r\n            btn.innerHTML = 'confirm dropoff';\r\n            btn2.innerHTML = 'cancel';\r\n            L.DomEvent.on(btn, 'click', async () => {\r\n                await this.condrop()\r\n            });\r\n            L.DomEvent.on(btn2, 'click', () => {\r\n                this.reqpickuploc.remove()\r\n                this.thert.remove()\r\n                this.thepopup.remove()\r\n                this.pickuploc.remove()\r\n                this.otherreqstatus=false\r\n            });\r\n            var newDiv = document.createElement(\"div\");\r\n            newDiv.appendChild(btn);\r\n            newDiv.appendChild(btn2);\r\n            this.thepopup.setContent(newDiv)\r\n            this.thepopup.openOn(this.map)\r\n        },\r\n        changepop(){\r\n            this.thepopup.setLatLng([this.pickuploc.getLatLng().lat+(0.003/(this.map.getZoom()**9))*(13**9), this.pickuploc.getLatLng().lng])\r\n        },\r\n        async setpickup(){\r\n            if(this.theuserid==undefined){\r\n                this.requested=false\r\n            }\r\n            else{\r\n                this.givingans=await this.getgive()\r\n                console.log(this.givingans.requested)\r\n                if(this.givingans.requested==undefined){\r\n                    this.requested=false\r\n                }\r\n                else if(this.givingans.requested=='False'){\r\n                    this.requested=false\r\n                }\r\n                else{\r\n                    this.requested=true\r\n                }\r\n            } \r\n            if(this.requested==false&&this.otherreqstatus==false){\r\n                this.otherreqstatus=true\r\n                let pinIcon = L.icon({\r\n                    iconUrl: image,\r\n                    iconSize: [20,20],\r\n                    iconAnchor: [10.5,20]\r\n                });\r\n                this.pickuploc = L.marker([this.lat, this.long], {\r\n                    icon: pinIcon,\r\n                    draggable: 'True'\r\n                }).addTo(this.map);\r\n                this.provider = new OpenStreetMapProvider();\r\n                this.searchControl = new GeoSearchControl({\r\n                    provider: this.provider,\r\n                    showMarker: false\r\n                });\r\n                this.map.addControl(this.searchControl);\r\n                this.map.on('geosearch/showlocation', this.work);\r\n                //this.map.openPopup('<p>test</p>',[this.pickuploc.getLatLng().lat+0.003,this.pickuploc.getLatLng().lng],{closeButton: false, closeOnClick: false})\r\n                this.thepopup=L.popup({closeButton:false,closeOnClick:false});\r\n                this.thepopup.setLatLng([this.lat+(0.003/(this.map.getZoom()**9))*(13**9), this.long])\r\n                this.map.on('zoomend',this.changepop)\r\n                //this.map.openPopup('<b-button id=\"test\" @click=\"test\">test</b-button>',[val.latlng.lat+0.003,val.latlng.lng],{closeButton: false, closeOnClick: false})\r\n                var container = L.DomUtil.create('div')\r\n                var btn = L.DomUtil.create('button', '', container);\r\n                var btn2 = L.DomUtil.create('button', '', container);\r\n                btn.setAttribute('type', 'button');\r\n                btn2.setAttribute('type', 'button');\r\n                btn.innerHTML = 'confirm pickup';\r\n                btn2.innerHTML = 'cancel';\r\n                L.DomEvent.on(btn, 'click', () => {\r\n                    this.conpick()\r\n                });\r\n                L.DomEvent.on(btn2, 'click', () => {\r\n                    this.pickuploc.remove()\r\n                });\r\n                var newDiv = document.createElement(\"div\");\r\n                newDiv.appendChild(btn);\r\n                newDiv.appendChild(btn2);\r\n                this.thepopup.setContent(newDiv)\r\n                this.thepopup.openOn(this.map)\r\n                this.pickuploc.on('move',this.confirm)\r\n            }\r\n            else if(this.otherreqstatus==true){\r\n                alert('Already requesting, drag pin to set pickup location')\r\n            }\r\n            else{\r\n                this.requested=false\r\n                await fetch('https://safe-river-16409.herokuapp.com/api/changerequestedfalse',{ credentials: 'include'})\r\n                this.reqstatus='request ride'\r\n                this.otherreqstatus=false\r\n                if(this.reqpickuploc!='test'){\r\n                    this.reqpickuploc.remove()\r\n                    this.reqdropoffloc.remove()\r\n                    this.thert.remove()\r\n                }\r\n            }\r\n        },\r\n        async setupmap(){\r\n            this.map = L.map('mapContainer').setView([this.lat, this.long], 13);\r\n            L.tileLayer('https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token=pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4NXVycTA2emYycXBndHRqcmZ3N3gifQ.rJcFIG214AriISLbB6B5aw', {\r\n                maxZoom: 18,\r\n                attribution: 'Map data &copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors, ' +\r\n                    'Imagery © <a href=\"https://www.mapbox.com/\">Mapbox</a>',\r\n                id: 'mapbox/streets-v11',\r\n                tileSize: 512,\r\n                zoomOffset: -1\r\n            }).addTo(this.map);\r\n            this.userposition = L.circle([this.lat, this.long], {\r\n                color: 'blue',\r\n                fillColor: 'blue',\r\n                fillOpacity: 0.5,\r\n                radius: 25,\r\n            }).addTo(this.map);\r\n            const thedat=await this.getrides()\r\n            var j=0\r\n            //console.log(thedat[0].Location36n79[0])\r\n            for(let i=0;i<Object.values(thedat[0].Location36n79[0]).length;i++){\r\n                this.values=Object.values(thedat[0].Location36n79[0])\r\n                this.inds.push(j)\r\n                //console.log(values[i])\r\n                if(this.values[i][0].requestedpickuplat!=\"\"&&this.values[i][0].requestedpickuplat!=undefined){\r\n                    if(this.values[i][0].name!=this.theuserid){\r\n                        var polygon = L.polygon([\r\n                            [this.values[i][0].requestedpickuplat, this.values[i][0].requestedpickuplong],\r\n                            [this.values[i][0].requesteddropofflat, this.values[i][0].requesteddropofflong]\r\n                        ]).addTo(this.map);\r\n                        //console.log(typeof(values[i][0]))\r\n                        this.thegiveridepopups.push(L.popup({closeButton:false,closeOnClick:false}))\r\n                        //values[i][0].append({ind:j})\r\n                        var container=L.DomUtil.create('div')\r\n                        this.thebtns.push(L.DomUtil.create('button', '', container));\r\n                        this.thebtns[j].setAttribute('type', 'button');\r\n                        this.thebtns[j].innerHTML = 'give ride';\r\n                        L.DomEvent.on(this.thebtns[j], 'click', () => {\r\n                            this.giveride(this.inds[i],this.values[i][0].name,this.values[i][0].acname,this.values[i][0].requestedpickuplat,this.values[i][0].requestedpickuplong,this.values[i][0].requesteddropofflat,this.values[i][0].requesteddropofflong)\r\n                        });\r\n                        this.yesbtns.push(L.DomUtil.create('button', '', container));\r\n                        this.yesbtns[j].setAttribute('type', 'button');\r\n                        this.yesbtns[j].innerHTML = 'Yes';\r\n                        this.nobtns.push(L.DomUtil.create('button', '', container));\r\n                        this.nobtns[j].setAttribute('type', 'button');\r\n                        this.nobtns[j].innerHTML = 'No';\r\n                        this.okbtns.push(L.DomUtil.create('button', '', container));\r\n                        this.okbtns[j].setAttribute('type', 'button');\r\n                        this.okbtns[j].innerHTML = 'OK';\r\n                        this.thegiveridepopups[j].setContent(this.thebtns[j])\r\n                        polygon.bindPopup(this.thegiveridepopups[j]);\r\n                        let circle = L.circle([this.values[i][0].requestedpickuplat, this.values[i][0].requestedpickuplong], {\r\n                            color: 'blue',\r\n                            fillColor: 'blue',\r\n                            fillOpacity: 0.5,\r\n                            radius: 25,\r\n                        }).addTo(this.map);\r\n                        circle.bindPopup(this.thegiveridepopups[j])\r\n                        let circle2 = L.circle([this.values[i][0].requesteddropofflat, this.values[i][0].requesteddropofflong], {\r\n                            color: 'red',\r\n                            fillColor: 'red',\r\n                            fillOpacity: 0.5,\r\n                            radius: 25,\r\n                        }).addTo(this.map);\r\n                        circle2.bindPopup(this.thegiveridepopups[j])\r\n                        j+=1\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        addLink (newLink) {\r\n            console.log(`EVENT: add new item ${newLink.name} to ${this.linkGroup.title}`);\r\n            this.$emit('new-link', this.groupId, newLink);\r\n            // may also do additional work related to logging, interactivity, or other tracking changes\r\n        }\r\n    },\r\n    async mounted () {\r\n        const theuserid=await this.use()\r\n        this.theuserid=theuserid.id\r\n        console.log(this.theuserid)\r\n        const newlat=await this.allLinks.getnewlat(this.theuserid);\r\n        const newlng=await this.allLinks.getnewlng(this.theuserid);\r\n        this.lat=newlat\r\n        this.long=newlng\r\n        this.setupmap();\r\n        this.isloading=''\r\n        if(this.theuserid!=undefined){\r\n            this.givingans=await this.getgive()\r\n            this.score=await this.getscore()\r\n            if(this.givingans.requested=='True'){\r\n                this.reqstatus='Cancel request (5 mile penalty)'\r\n                this.requested=true\r\n                this.reqpickuploc=L.circle([this.givingans.requestedpickuplat, this.givingans.requestedpickuplong], {\r\n                    color: 'green',\r\n                    fillColor: 'green',\r\n                    fillOpacity: 0.5,\r\n                    radius: 25,\r\n                }).addTo(this.map);\r\n                this.thert=L.polygon([\r\n                    [this.givingans.requestedpickuplat, this.givingans.requestedpickuplong],\r\n                    [this.givingans.requesteddropofflat, this.givingans.requesteddropofflong]\r\n                ]).addTo(this.map);\r\n                this.reqdropoffloc=L.circle([this.givingans.requesteddropofflat, this.givingans.requesteddropofflong], {\r\n                    color: 'red',\r\n                    fillColor: 'red',\r\n                    fillOpacity: 0.5,\r\n                    radius: 25,\r\n                }).addTo(this.map);\r\n                await this.checkriderdest()\r\n            }\r\n            else{\r\n                this.requested=false\r\n            }\r\n            if(this.givingans.giving=='True'){\r\n                this.giving==true\r\n                await this.checkdest()\r\n            }\r\n            else{\r\n                this.giving=false\r\n            }\r\n        }\r\n        //const newlng=await this.allLinks.getlong();\r\n        /*\r\n        var thelat=0\r\n        var thelong=0\r\n        console.log(999)\r\n        function success(position) {\r\n            thelat=position.coords.latitude;\r\n            thelong=position.coords.longitude;\r\n        }\r\n        \r\n        function error() {\r\n            console.log('Unable to retrieve your location');\r\n        }\r\n        \r\n        if(!navigator.geolocation) {\r\n            console.log('Geolocation is not supported by your browser');\r\n        } else {\r\n            navigator.geolocation.getCurrentPosition(success, error);\r\n        }\r\n        const mymap = L.map('mapid').setView([thelat, thelong], 13);\r\n        L.tileLayer('https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token=pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4NXVycTA2emYycXBndHRqcmZ3N3gifQ.rJcFIG214AriISLbB6B5aw', {\r\n            maxZoom: 18,\r\n            attribution: 'Map data &copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors, ' +\r\n                'Imagery © <a href=\"https://www.mapbox.com/\">Mapbox</a>',\r\n            id: 'mapbox/streets-v11',\r\n            tileSize: 512,\r\n            zoomOffset: -1\r\n        }).addTo(mymap);\r\n        for(let i=1;i<this.allLinks.data.length;i++){\r\n            var polygon = L.polygon([\r\n            [this.allLinks.data[i].requestedpickuplat, this.allLinks.data.users[i].requestedpickuplong],\r\n            [this.allLinks.data[i].requesteddropofflat, this.allLinks.data.users[i].requesteddropofflong]\r\n            ]).addTo(mymap);\r\n            polygon.bindPopup('<h4>'+this.allLinks.data[i].name+'</h4>').openPopup();\r\n            let circle = L.circle([this.allLinks.data[i].requestedpickuplat, this.allLinks.data[i].requestedpickuplong], {\r\n                color: 'blue',\r\n                fillColor: 'blue',\r\n                fillOpacity: 0.5,\r\n                radius: 25,\r\n            }).addTo(mymap);\r\n            circle.bindPopup('<h4>'+this.allLinks.data[i].name+'</h4>').openPopup();\r\n            let circle2 = L.circle([this.allLinks.data[i].requesteddropofflat, this.allLinks.data[i].requesteddropofflong], {\r\n                color: 'red',\r\n                fillColor: 'red',\r\n                fillOpacity: 0.5,\r\n                radius: 25,\r\n            }).addTo(mymap);\r\n            circle2.bindPopup('<h4>'+this.allLinks.data[i].name+'</h4>').openPopup();\r\n        }\r\n        */\r\n    }\r\n}\r\n</script>\r\n<style scoped>\r\n#mapContainer {\r\n width: 80vw;\r\n height: 100vh;\r\n}\r\n#request {\r\n    position: absolute;\r\n    bottom: 370px;\r\n    width: 10%;\r\n    z-index: 9999;\r\n}\r\n</style>"],"sourceRoot":"src/components"}]}