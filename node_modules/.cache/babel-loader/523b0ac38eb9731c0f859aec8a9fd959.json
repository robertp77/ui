{"remainingRequest":"C:\\Users\\arobu\\portfolio_rap55\\finalproject\\ui\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\arobu\\portfolio_rap55\\finalproject\\ui\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\arobu\\portfolio_rap55\\finalproject\\ui\\src\\data\\LinkDataStore.js","dependencies":[{"path":"C:\\Users\\arobu\\portfolio_rap55\\finalproject\\ui\\src\\data\\LinkDataStore.js","mtime":1617982975343},{"path":"C:\\Users\\arobu\\portfolio_rap55\\finalproject\\ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\arobu\\portfolio_rap55\\finalproject\\ui\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\arobu\\portfolio_rap55\\finalproject\\ui\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkM6L1VzZXJzL2Fyb2J1L3BvcnRmb2xpb19yYXA1NS9maW5hbHByb2plY3QvdWkvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5jb25jYXQuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5mdW5jdGlvbi5uYW1lLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKCi8qDQogKiBUaGlzIHJlcHJlc2VudHMgdGhlIHJlYWN0aXZlIGRhdGEgdG8gYmUgZWRpdGVkLg0KICoNCiAqIEl0IGNvbnRhaW5zIG5vIGludGVyYWN0aW9uIGxvZ2ljIChZQVkhKSwganVzdCBpbmZvcm1hdGlvbiBhYm91dCB0aGUgbGlua3MuDQogKg0KICogSXQgaXMgaW5pdGlhbGl6ZWQgd2l0aCBleGFtcGxlIGRhdGEgdG8gc3RhcnQgYnV0IGxpbmtzIGNvdWxkIGJlIHNldCB0byBlbXB0eSBhbmQgc3RpbGwgd29yay4NCiAqDQogKiBAYXV0aG9yIFJvYmVydCBDLiBEdXZhbGwNCiAqIEBhdXRob3IgRGVubmlzIFF1YW4NCiAqLwovLyBwYWNrYWdlIHRoYXQgYnVuZGxlcyB1cCBxdWVyeSBwYXJhbWV0ZXJzIGdpdmVuIGFzIGFuIE9iamVjdCBpbnRvIFVSTCBzeW50YXgKaW1wb3J0IHF1ZXJ5c3RyaW5nIGZyb20gJ3F1ZXJ5c3RyaW5nJzsgLy8gd2hpY2ggVVJMIHRvIHVzZSB0byBnZXQgdGhlIGRhdGEgZnJvbSAocmVtb3RlIG9yIGxvY2FsKQovL2NvbnN0IERBVEFfVVJMID0gJ2h0dHBzOi8vY3J5cHRpYy1zYXZhbm5haC0xMTgxMC5oZXJva3VhcHAuY29tLyc7Cgp2YXIgREFUQV9VUkwgPSAnJzsgLy8gc2ltcGxlIHV0aWxpdHkgZnVuY3Rpb24gdG8gZW5jb2RlIHRoZSBnaXZlbiBvYmplY3QgYXMgcXVlcnkgcGFyYW1ldGVycyBhbmQgcmV0dXJuIHRoZSByZXN1bHRpbmcgSlNPTgovLyBOT1RFLCBxdWVyeVBhcmFtZXRlcnMgY29udGFpbnMgdmFsdWVzIG1lYW50IHRvIGJlIHBhc3NlZCBhbG9uZyB3aXRoIHRoZSBVUkwgKGkuZS4sIGFmdGVyIHRoZSA/KQovLyBOT1RFLCBwcm90b2NvbE9wdGlvbnMgY29udGFpbnMgdmFsdWVzIG1lYW50IHRvIGJlIHBhc3NlZCBhbG9uZyB3aXRoIHRoZSByZXF1ZXN0IChpLmUuLCBHRVQvUE9TVCwgaGVhZGVycywgZXRjLikKCmZ1bmN0aW9uIGdldEpTT04oX3gsIF94MiwgX3gzLCBfeDQpIHsKICByZXR1cm4gX2dldEpTT04uYXBwbHkodGhpcywgYXJndW1lbnRzKTsKfQoKZnVuY3Rpb24gX2dldEpTT04oKSB7CiAgX2dldEpTT04gPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWU0KHVybCwgYXBpQWN0aW9uLCBxdWVyeVBhcmFtZXRlcnMsIHByb3RvY29sT3B0aW9ucykgewogICAgdmFyIHBhcmFtZXRlcnMsIHVybFdpdGhQYXJhbWV0ZXJzLCByZXNwb25zZTsKICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlNCQoX2NvbnRleHQ0KSB7CiAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgc3dpdGNoIChfY29udGV4dDQucHJldiA9IF9jb250ZXh0NC5uZXh0KSB7CiAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgIHBhcmFtZXRlcnMgPSBxdWVyeVBhcmFtZXRlcnMgPyAiPyIuY29uY2F0KHF1ZXJ5c3RyaW5nLnN0cmluZ2lmeShxdWVyeVBhcmFtZXRlcnMpKSA6ICcnOwogICAgICAgICAgICB1cmxXaXRoUGFyYW1ldGVycyA9ICIiLmNvbmNhdCh1cmwpLmNvbmNhdChhcGlBY3Rpb24pLmNvbmNhdChwYXJhbWV0ZXJzKTsKICAgICAgICAgICAgY29uc29sZS5sb2codXJsV2l0aFBhcmFtZXRlcnMpOwogICAgICAgICAgICBfY29udGV4dDQubmV4dCA9IDU7CiAgICAgICAgICAgIHJldHVybiBmZXRjaCh1cmxXaXRoUGFyYW1ldGVycywgcHJvdG9jb2xPcHRpb25zKTsKCiAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgIHJlc3BvbnNlID0gX2NvbnRleHQ0LnNlbnQ7CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dDQuYWJydXB0KCJyZXR1cm4iLCByZXNwb25zZS5qc29uKCkpOwoKICAgICAgICAgIGNhc2UgNzoKICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dDQuc3RvcCgpOwogICAgICAgIH0KICAgICAgfQogICAgfSwgX2NhbGxlZTQpOwogIH0pKTsKICByZXR1cm4gX2dldEpTT04uYXBwbHkodGhpcywgYXJndW1lbnRzKTsKfQoKZXhwb3J0IHZhciBsaW5rRGF0YVN0b3JlID0gewogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gW107CiAgfSwKICB1c2VSZW1vdGVTZXJ2ZXI6IHRydWUsCiAgaW5pdERhdGE6IGZ1bmN0aW9uIGluaXREYXRhKCkgewogICAgdmFyIF90aGlzID0gdGhpczsKCiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgY29uc29sZS5sb2coIkdldHRpbmcgaW5pdGlhbCB2ZXJzaW9uIG9mIGRhdGEiKTsKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMzsKICAgICAgICAgICAgICByZXR1cm4gZ2V0SlNPTihEQVRBX1VSTCwgJ2FwaS9nZXRMaW5rcycpOwoKICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgIF90aGlzLmRhdGEgPSBfY29udGV4dC5zZW50OwoKICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlKTsKICAgIH0pKSgpOwogIH0sCiAgLy8gY2hhbmdlIHRpdGxlIG9mIGdyb3VwIGF0IHRoZSBnaXZlbiBpbmRleAogIC8vIE5PVEUsIGlmIGluZGV4IGNhbiBjaGFuZ2UsIHRoZW4gc2hvdWxkIHVzZSBhIHVuaXF1ZSBJRCBpbnN0ZWFkCiAgc2V0VGl0bGU6IGZ1bmN0aW9uIHNldFRpdGxlKGluZGV4LCBuZXdUaXRsZSkgewogICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoKSB7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgY29uc29sZS5sb2coIlNldHRpbmcgdGl0bGUgZnJvbSAiLmNvbmNhdChfdGhpczIuZGF0YVtpbmRleF0udGl0bGUsICIgdG8gIikuY29uY2F0KG5ld1RpdGxlKSk7IC8vIGNvbWluZyBzb29uIC4uLgoKICAgICAgICAgICAgY2FzZSAxOgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZTIpOwogICAgfSkpKCk7CiAgfSwKICAvLyBhZGQgbmV3IGxpbmsgdG8gZ3JvdXAgYXQgdGhlIGdpdmVuIGluZGV4CiAgLy8gTk9URSwgaWYgaW5kZXggY2FuIGNoYW5nZSwgdGhlbiBzaG91bGQgdXNlIGEgdW5pcXVlIElEIGluc3RlYWQKICBhZGRMaW5rOiBmdW5jdGlvbiBhZGRMaW5rKGluZGV4LCBuZXdMaW5rKSB7CiAgICB2YXIgX3RoaXMzID0gdGhpczsKCiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMygpIHsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUzJChfY29udGV4dDMpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dDMucHJldiA9IF9jb250ZXh0My5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBjb25zb2xlLmxvZygiQWRkaW5nIG5ldyBsaW5rICIuY29uY2F0KG5ld0xpbmsubmFtZSwgIiB0byBncm91cCAiKS5jb25jYXQoX3RoaXMzLmRhdGFbaW5kZXhdLnRpdGxlKSk7IC8vIGNvbWluZyBzb29uIC4uLgoKICAgICAgICAgICAgY2FzZSAxOgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDMuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZTMpOwogICAgfSkpKCk7CiAgfQp9Ow=="},{"version":3,"sources":["C:/Users/arobu/portfolio_rap55/finalproject/ui/src/data/LinkDataStore.js"],"names":["querystring","DATA_URL","getJSON","url","apiAction","queryParameters","protocolOptions","parameters","stringify","urlWithParameters","console","log","fetch","response","json","linkDataStore","data","useRemoteServer","initData","setTitle","index","newTitle","title","addLink","newLink","name"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,OAAOA,WAAP,MAAwB,aAAxB,C,CAEA;AACA;;AACA,IAAMC,QAAQ,GAAG,EAAjB,C,CAGA;AACA;AACA;;SACeC,O;;;;;qEAAf,kBAAuBC,GAAvB,EAA4BC,SAA5B,EAAuCC,eAAvC,EAAwDC,eAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AACUC,YAAAA,UADV,GACuBF,eAAe,cAAOL,WAAW,CAACQ,SAAZ,CAAsBH,eAAtB,CAAP,IAAkD,EADxF;AAEUI,YAAAA,iBAFV,aAEiCN,GAFjC,SAEuCC,SAFvC,SAEmDG,UAFnD;AAGIG,YAAAA,OAAO,CAACC,GAAR,CAAYF,iBAAZ;AAHJ;AAAA,mBAI2BG,KAAK,CAACH,iBAAD,EAAoBH,eAApB,CAJhC;;AAAA;AAIUO,YAAAA,QAJV;AAAA,8CAKWA,QAAQ,CAACC,IAAT,EALX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AASA,OAAO,IAAMC,aAAa,GAAG;AACzBC,EAAAA,IAAI,EAAE;AAAA,WAAM,EAAN;AAAA,GADmB;AAEzBC,EAAAA,eAAe,EAAE,IAFQ;AAInBC,EAAAA,QAJmB,sBAIP;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACdR,cAAAA,OAAO,CAACC,GAAR;AADc;AAAA,qBAEIT,OAAO,CAACD,QAAD,EAAW,cAAX,CAFX;;AAAA;AAEd,cAAA,KAAI,CAACe,IAFS;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGjB,GAPwB;AAQzB;AACA;AACMG,EAAAA,QAVmB,oBAUTC,KAVS,EAUFC,QAVE,EAUQ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAC7BX,cAAAA,OAAO,CAACC,GAAR,8BAAkC,MAAI,CAACK,IAAL,CAAUI,KAAV,EAAiBE,KAAnD,iBAA+DD,QAA/D,GAD6B,CAE7B;;AAF6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGhC,GAbwB;AAczB;AACA;AACME,EAAAA,OAhBmB,mBAgBVH,KAhBU,EAgBHI,OAhBG,EAgBM;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAC3Bd,cAAAA,OAAO,CAACC,GAAR,2BAA+Ba,OAAO,CAACC,IAAvC,uBAAwD,MAAI,CAACT,IAAL,CAAUI,KAAV,EAAiBE,KAAzE,GAD2B,CAE3B;;AAF2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAG9B;AAnBwB,CAAtB","sourcesContent":["/*\r\n * This represents the reactive data to be edited.\r\n *\r\n * It contains no interaction logic (YAY!), just information about the links.\r\n *\r\n * It is initialized with example data to start but links could be set to empty and still work.\r\n *\r\n * @author Robert C. Duvall\r\n * @author Dennis Quan\r\n */\r\n\r\n// package that bundles up query parameters given as an Object into URL syntax\r\nimport querystring from 'querystring';\r\n\r\n// which URL to use to get the data from (remote or local)\r\n//const DATA_URL = 'https://cryptic-savannah-11810.herokuapp.com/';\r\nconst DATA_URL = '';\r\n\r\n\r\n// simple utility function to encode the given object as query parameters and return the resulting JSON\r\n// NOTE, queryParameters contains values meant to be passed along with the URL (i.e., after the ?)\r\n// NOTE, protocolOptions contains values meant to be passed along with the request (i.e., GET/POST, headers, etc.)\r\nasync function getJSON(url, apiAction, queryParameters, protocolOptions) {\r\n    const parameters = queryParameters ? `?${querystring.stringify(queryParameters)}` : '';\r\n    const urlWithParameters = `${url}${apiAction}${parameters}`;\r\n    console.log(urlWithParameters);\r\n    const response = await fetch(urlWithParameters, protocolOptions);\r\n    return response.json();\r\n}\r\n\r\n\r\nexport const linkDataStore = {\r\n    data: () => [],\r\n    useRemoteServer: true,\r\n\r\n    async initData () {\r\n        console.log(`Getting initial version of data`);\r\n        this.data = await getJSON(DATA_URL, 'api/getLinks');\r\n    },\r\n    // change title of group at the given index\r\n    // NOTE, if index can change, then should use a unique ID instead\r\n    async setTitle (index, newTitle) {\r\n        console.log(`Setting title from ${this.data[index].title} to ${newTitle}`);\r\n        // coming soon ...\r\n    },\r\n    // add new link to group at the given index\r\n    // NOTE, if index can change, then should use a unique ID instead\r\n    async addLink (index, newLink) {\r\n        console.log(`Adding new link ${newLink.name} to group ${this.data[index].title}`);\r\n        // coming soon ...\r\n    }\r\n};\r\n"]}]}