{"remainingRequest":"C:\\Users\\arobu\\portfolio_rap55\\finalproject\\ui\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\arobu\\portfolio_rap55\\finalproject\\ui\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\arobu\\portfolio_rap55\\finalproject\\ui\\src\\data\\LinkDataStore.js","dependencies":[{"path":"C:\\Users\\arobu\\portfolio_rap55\\finalproject\\ui\\src\\data\\LinkDataStore.js","mtime":1619043459517},{"path":"C:\\Users\\arobu\\portfolio_rap55\\finalproject\\ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\arobu\\portfolio_rap55\\finalproject\\ui\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\arobu\\portfolio_rap55\\finalproject\\ui\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkM6L1VzZXJzL2Fyb2J1L3BvcnRmb2xpb19yYXA1NS9maW5hbHByb2plY3QvdWkvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5jb25jYXQuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5mdW5jdGlvbi5uYW1lLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKCi8qDQogKiBUaGlzIHJlcHJlc2VudHMgdGhlIHJlYWN0aXZlIGRhdGEgdG8gYmUgZWRpdGVkLg0KICoNCiAqIEl0IGNvbnRhaW5zIG5vIGludGVyYWN0aW9uIGxvZ2ljIChZQVkhKSwganVzdCBpbmZvcm1hdGlvbiBhYm91dCB0aGUgbGlua3MuDQogKg0KICogSXQgaXMgaW5pdGlhbGl6ZWQgd2l0aCBleGFtcGxlIGRhdGEgdG8gc3RhcnQgYnV0IGxpbmtzIGNvdWxkIGJlIHNldCB0byBlbXB0eSBhbmQgc3RpbGwgd29yay4NCiAqDQogKiBAYXV0aG9yIFJvYmVydCBDLiBEdXZhbGwNCiAqIEBhdXRob3IgRGVubmlzIFF1YW4NCiAqLwovLyBwYWNrYWdlIHRoYXQgYnVuZGxlcyB1cCBxdWVyeSBwYXJhbWV0ZXJzIGdpdmVuIGFzIGFuIE9iamVjdCBpbnRvIFVSTCBzeW50YXgKaW1wb3J0IHF1ZXJ5c3RyaW5nIGZyb20gJ3F1ZXJ5c3RyaW5nJzsKCnZhciBhZG1pbiA9IHJlcXVpcmUoJ2ZpcmViYXNlLWFkbWluJyk7IC8vIHByb3ZpZGUgZ2xvYmFsIGFjY2VzcyB0byBpbml0aWFsaXplZCBhcHAgZGF0YWJhc2UKCgp2YXIgX3JlcXVpcmUgPSByZXF1aXJlKCcuL3NlY3JldHMnKSwKICAgIEZJUkVCQVNFX0NPTkZJRyA9IF9yZXF1aXJlLkZJUkVCQVNFX0NPTkZJRzsKCmFkbWluLmluaXRpYWxpemVBcHAoewogIGNyZWRlbnRpYWw6IGFkbWluLmNyZWRlbnRpYWwuY2VydChGSVJFQkFTRV9DT05GSUcpLAogIGRhdGFiYXNlVVJMOiAiaHR0cHM6Ly8iLmNvbmNhdChGSVJFQkFTRV9DT05GSUcucHJvamVjdF9pZCwgIi1kZWZhdWx0LXJ0ZGIuZmlyZWJhc2Vpby5jb20iKQp9KTsKdmFyIERCID0gYWRtaW4uZGF0YWJhc2UoKTsgLy8gd2hpY2ggVVJMIHRvIHVzZSB0byBnZXQgdGhlIGRhdGEgZnJvbSAocmVtb3RlIG9yIGxvY2FsKQovL2NvbnN0IERBVEFfVVJMID0gJ2h0dHBzOi8vY3J5cHRpYy1zYXZhbm5haC0xMTgxMC5oZXJva3VhcHAuY29tLyc7Cgp2YXIgREFUQV9VUkwgPSAnJzsgLy8gc2ltcGxlIHV0aWxpdHkgZnVuY3Rpb24gdG8gZW5jb2RlIHRoZSBnaXZlbiBvYmplY3QgYXMgcXVlcnkgcGFyYW1ldGVycyBhbmQgcmV0dXJuIHRoZSByZXN1bHRpbmcgSlNPTgovLyBOT1RFLCBxdWVyeVBhcmFtZXRlcnMgY29udGFpbnMgdmFsdWVzIG1lYW50IHRvIGJlIHBhc3NlZCBhbG9uZyB3aXRoIHRoZSBVUkwgKGkuZS4sIGFmdGVyIHRoZSA/KQovLyBOT1RFLCBwcm90b2NvbE9wdGlvbnMgY29udGFpbnMgdmFsdWVzIG1lYW50IHRvIGJlIHBhc3NlZCBhbG9uZyB3aXRoIHRoZSByZXF1ZXN0IChpLmUuLCBHRVQvUE9TVCwgaGVhZGVycywgZXRjLikKCmZ1bmN0aW9uIGdldEpTT04oX3gsIF94MiwgX3gzLCBfeDQpIHsKICByZXR1cm4gX2dldEpTT04uYXBwbHkodGhpcywgYXJndW1lbnRzKTsKfQoKZnVuY3Rpb24gX2dldEpTT04oKSB7CiAgX2dldEpTT04gPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWU0KHVybCwgYXBpQWN0aW9uLCBxdWVyeVBhcmFtZXRlcnMsIHByb3RvY29sT3B0aW9ucykgewogICAgdmFyIHBhcmFtZXRlcnMsIHVybFdpdGhQYXJhbWV0ZXJzLCByZXNwb25zZTsKICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlNCQoX2NvbnRleHQ0KSB7CiAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgc3dpdGNoIChfY29udGV4dDQucHJldiA9IF9jb250ZXh0NC5uZXh0KSB7CiAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgIHBhcmFtZXRlcnMgPSBxdWVyeVBhcmFtZXRlcnMgPyAiPyIuY29uY2F0KHF1ZXJ5c3RyaW5nLnN0cmluZ2lmeShxdWVyeVBhcmFtZXRlcnMpKSA6ICcnOwogICAgICAgICAgICB1cmxXaXRoUGFyYW1ldGVycyA9ICIiLmNvbmNhdCh1cmwpLmNvbmNhdChhcGlBY3Rpb24pLmNvbmNhdChwYXJhbWV0ZXJzKTsKICAgICAgICAgICAgY29uc29sZS5sb2codXJsV2l0aFBhcmFtZXRlcnMpOwogICAgICAgICAgICBfY29udGV4dDQubmV4dCA9IDU7CiAgICAgICAgICAgIHJldHVybiBmZXRjaCh1cmxXaXRoUGFyYW1ldGVycywgcHJvdG9jb2xPcHRpb25zKTsKCiAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgIHJlc3BvbnNlID0gX2NvbnRleHQ0LnNlbnQ7CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dDQuYWJydXB0KCJyZXR1cm4iLCByZXNwb25zZS5qc29uKCkpOwoKICAgICAgICAgIGNhc2UgNzoKICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dDQuc3RvcCgpOwogICAgICAgIH0KICAgICAgfQogICAgfSwgX2NhbGxlZTQpOwogIH0pKTsKICByZXR1cm4gX2dldEpTT04uYXBwbHkodGhpcywgYXJndW1lbnRzKTsKfQoKZnVuY3Rpb24gZ2V0Q29vcmRpbmF0ZXMoKSB7CiAgcmV0dXJuIF9nZXRDb29yZGluYXRlcy5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwp9CgpmdW5jdGlvbiBfZ2V0Q29vcmRpbmF0ZXMoKSB7CiAgX2dldENvb3JkaW5hdGVzID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlNSgpIHsKICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlNSQoX2NvbnRleHQ1KSB7CiAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgc3dpdGNoIChfY29udGV4dDUucHJldiA9IF9jb250ZXh0NS5uZXh0KSB7CiAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dDUuYWJydXB0KCJyZXR1cm4iLCBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7CiAgICAgICAgICAgICAgbmF2aWdhdG9yLmdlb2xvY2F0aW9uLmdldEN1cnJlbnRQb3NpdGlvbihyZXNvbHZlLCByZWplY3QpOwogICAgICAgICAgICB9KSk7CgogICAgICAgICAgY2FzZSAxOgogICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0NS5zdG9wKCk7CiAgICAgICAgfQogICAgICB9CiAgICB9LCBfY2FsbGVlNSk7CiAgfSkpOwogIHJldHVybiBfZ2V0Q29vcmRpbmF0ZXMuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKfQoKZXhwb3J0IHZhciBsaW5rRGF0YVN0b3JlID0gewogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gW107CiAgfSwKICAvL2RhdGFSZWY6IERCLnJlZignZGF0YScpLAogIHVzZVJlbW90ZVNlcnZlcjogdHJ1ZSwKICBpbml0RGF0YTogZnVuY3Rpb24gaW5pdERhdGEoKSB7CiAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgIHZhciBsYXQsIGxvbmcsIHBvc2l0aW9uOwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgbGF0ID0gMDsKICAgICAgICAgICAgICBsb25nID0gMDsKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNDsKICAgICAgICAgICAgICByZXR1cm4gZ2V0Q29vcmRpbmF0ZXMoKTsKCiAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgICBwb3NpdGlvbiA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgbGF0ID0gcG9zaXRpb24uY29vcmRzLmxhdGl0dWRlOwogICAgICAgICAgICAgIGxvbmcgPSBwb3NpdGlvbi5jb29yZHMubG9uZ2l0dWRlOwogICAgICAgICAgICAgIGxhdCA9IGxhdCArICcnOwogICAgICAgICAgICAgIGxvbmcgPSBsb25nICsgJyc7CiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDExOwogICAgICAgICAgICAgIHJldHVybiBnZXRKU09OKERBVEFfVVJMLCAnYXBpL2dldExpbmtzP2xhdD0nICsgbGF0ICsgJyZsb25nPScgKyBsb25nKTsKCiAgICAgICAgICAgIGNhc2UgMTE6CiAgICAgICAgICAgICAgX3RoaXMuZGF0YSA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgY29uc29sZS5sb2coIkdldHRpbmcgaW5pdGlhbCB2ZXJzaW9uIG9mIGRhdGEiKTsKCiAgICAgICAgICAgIGNhc2UgMTM6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUpOwogICAgfSkpKCk7CiAgfSwKICAvLyBjaGFuZ2UgdGl0bGUgb2YgZ3JvdXAgYXQgdGhlIGdpdmVuIGluZGV4CiAgLy8gTk9URSwgaWYgaW5kZXggY2FuIGNoYW5nZSwgdGhlbiBzaG91bGQgdXNlIGEgdW5pcXVlIElEIGluc3RlYWQKICBzZXRUaXRsZTogZnVuY3Rpb24gc2V0VGl0bGUoaW5kZXgsIG5ld1RpdGxlKSB7CiAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMigpIHsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBjb25zb2xlLmxvZygiU2V0dGluZyB0aXRsZSBmcm9tICIuY29uY2F0KF90aGlzMi5kYXRhW2luZGV4XS50aXRsZSwgIiB0byAiKS5jb25jYXQobmV3VGl0bGUpKTsgLy8gY29taW5nIHNvb24gLi4uCgogICAgICAgICAgICBjYXNlIDE6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlMik7CiAgICB9KSkoKTsKICB9LAogIC8vIGFkZCBuZXcgbGluayB0byBncm91cCBhdCB0aGUgZ2l2ZW4gaW5kZXgKICAvLyBOT1RFLCBpZiBpbmRleCBjYW4gY2hhbmdlLCB0aGVuIHNob3VsZCB1c2UgYSB1bmlxdWUgSUQgaW5zdGVhZAogIGFkZExpbms6IGZ1bmN0aW9uIGFkZExpbmsoaW5kZXgsIG5ld0xpbmspIHsKICAgIHZhciBfdGhpczMgPSB0aGlzOwoKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUzKCkgewogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTMkKF9jb250ZXh0MykgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0My5wcmV2ID0gX2NvbnRleHQzLm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIGNvbnNvbGUubG9nKCJBZGRpbmcgbmV3IGxpbmsgIi5jb25jYXQobmV3TGluay5uYW1lLCAiIHRvIGdyb3VwICIpLmNvbmNhdChfdGhpczMuZGF0YVtpbmRleF0udGl0bGUpKTsgLy8gY29taW5nIHNvb24gLi4uCgogICAgICAgICAgICBjYXNlIDE6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlMyk7CiAgICB9KSkoKTsKICB9Cn07"},{"version":3,"sources":["C:/Users/arobu/portfolio_rap55/finalproject/ui/src/data/LinkDataStore.js"],"names":["querystring","admin","require","FIREBASE_CONFIG","initializeApp","credential","cert","databaseURL","project_id","DB","database","DATA_URL","getJSON","url","apiAction","queryParameters","protocolOptions","parameters","stringify","urlWithParameters","console","log","fetch","response","json","getCoordinates","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","linkDataStore","data","useRemoteServer","initData","lat","long","position","coords","latitude","longitude","setTitle","index","newTitle","title","addLink","newLink","name"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,OAAOA,WAAP,MAAwB,aAAxB;;AACA,IAAMC,KAAK,GAAGC,OAAO,CAAC,gBAAD,CAArB,C,CAEA;;;eAC4BA,OAAO,CAAC,WAAD,C;IAA3BC,e,YAAAA,e;;AACRF,KAAK,CAACG,aAAN,CAAoB;AAChBC,EAAAA,UAAU,EAAEJ,KAAK,CAACI,UAAN,CAAiBC,IAAjB,CAAsBH,eAAtB,CADI;AAEhBI,EAAAA,WAAW,oBAAaJ,eAAe,CAACK,UAA7B;AAFK,CAApB;AAIA,IAAMC,EAAE,GAAGR,KAAK,CAACS,QAAN,EAAX,C,CAEA;AACA;;AACA,IAAMC,QAAQ,GAAG,EAAjB,C,CAGA;AACA;AACA;;SACeC,O;;;;;qEAAf,kBAAuBC,GAAvB,EAA4BC,SAA5B,EAAuCC,eAAvC,EAAwDC,eAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AACUC,YAAAA,UADV,GACuBF,eAAe,cAAOf,WAAW,CAACkB,SAAZ,CAAsBH,eAAtB,CAAP,IAAkD,EADxF;AAEUI,YAAAA,iBAFV,aAEiCN,GAFjC,SAEuCC,SAFvC,SAEmDG,UAFnD;AAGIG,YAAAA,OAAO,CAACC,GAAR,CAAYF,iBAAZ;AAHJ;AAAA,mBAI2BG,KAAK,CAACH,iBAAD,EAAoBH,eAApB,CAJhC;;AAAA;AAIUO,YAAAA,QAJV;AAAA,8CAKWA,QAAQ,CAACC,IAAT,EALX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SAQeC,c;;;;;4EAAf;AAAA;AAAA;AAAA;AAAA;AAAA,8CACW,IAAIC,OAAJ,CAAY,UAASC,OAAT,EAAkBC,MAAlB,EAA0B;AAC3CC,cAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyCJ,OAAzC,EAAkDC,MAAlD;AACD,aAFM,CADX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAMA,OAAO,IAAMI,aAAa,GAAG;AACzBC,EAAAA,IAAI,EAAE;AAAA,WAAM,EAAN;AAAA,GADmB;AAEzB;AACAC,EAAAA,eAAe,EAAE,IAHQ;AAInBC,EAAAA,QAJmB,sBAIP;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACVC,cAAAA,GADU,GACN,CADM;AAEVC,cAAAA,IAFU,GAEL,CAFK;AAAA;AAAA,qBAGSZ,cAAc,EAHvB;;AAAA;AAGRa,cAAAA,QAHQ;AAIdF,cAAAA,GAAG,GAAGE,QAAQ,CAACC,MAAT,CAAgBC,QAAtB;AACAH,cAAAA,IAAI,GAAGC,QAAQ,CAACC,MAAT,CAAgBE,SAAvB;AACAL,cAAAA,GAAG,GAACA,GAAG,GAAC,EAAR;AACAC,cAAAA,IAAI,GAACA,IAAI,GAAC,EAAV;AAPc;AAAA,qBAQIzB,OAAO,CAACD,QAAD,EAAW,sBAAoByB,GAApB,GAAwB,QAAxB,GAAiCC,IAA5C,CARX;;AAAA;AAQd,cAAA,KAAI,CAACJ,IARS;AASdb,cAAAA,OAAO,CAACC,GAAR;;AATc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUjB,GAdwB;AAezB;AACA;AACMqB,EAAAA,QAjBmB,oBAiBTC,KAjBS,EAiBFC,QAjBE,EAiBQ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAC7BxB,cAAAA,OAAO,CAACC,GAAR,8BAAkC,MAAI,CAACY,IAAL,CAAUU,KAAV,EAAiBE,KAAnD,iBAA+DD,QAA/D,GAD6B,CAE7B;;AAF6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGhC,GApBwB;AAqBzB;AACA;AACME,EAAAA,OAvBmB,mBAuBVH,KAvBU,EAuBHI,OAvBG,EAuBM;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAC3B3B,cAAAA,OAAO,CAACC,GAAR,2BAA+B0B,OAAO,CAACC,IAAvC,uBAAwD,MAAI,CAACf,IAAL,CAAUU,KAAV,EAAiBE,KAAzE,GAD2B,CAE3B;;AAF2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAG9B;AA1BwB,CAAtB","sourcesContent":["/*\r\n * This represents the reactive data to be edited.\r\n *\r\n * It contains no interaction logic (YAY!), just information about the links.\r\n *\r\n * It is initialized with example data to start but links could be set to empty and still work.\r\n *\r\n * @author Robert C. Duvall\r\n * @author Dennis Quan\r\n */\r\n\r\n// package that bundles up query parameters given as an Object into URL syntax\r\nimport querystring from 'querystring';\r\nconst admin = require('firebase-admin');\r\n\r\n// provide global access to initialized app database\r\nconst { FIREBASE_CONFIG } = require('./secrets');\r\nadmin.initializeApp({\r\n    credential: admin.credential.cert(FIREBASE_CONFIG),\r\n    databaseURL: `https://${FIREBASE_CONFIG.project_id}-default-rtdb.firebaseio.com`,\r\n});\r\nconst DB = admin.database();\r\n\r\n// which URL to use to get the data from (remote or local)\r\n//const DATA_URL = 'https://cryptic-savannah-11810.herokuapp.com/';\r\nconst DATA_URL = '';\r\n\r\n\r\n// simple utility function to encode the given object as query parameters and return the resulting JSON\r\n// NOTE, queryParameters contains values meant to be passed along with the URL (i.e., after the ?)\r\n// NOTE, protocolOptions contains values meant to be passed along with the request (i.e., GET/POST, headers, etc.)\r\nasync function getJSON(url, apiAction, queryParameters, protocolOptions) {\r\n    const parameters = queryParameters ? `?${querystring.stringify(queryParameters)}` : '';\r\n    const urlWithParameters = `${url}${apiAction}${parameters}`;\r\n    console.log(urlWithParameters);\r\n    const response = await fetch(urlWithParameters, protocolOptions);\r\n    return response.json();\r\n}\r\n\r\nasync function getCoordinates() {\r\n    return new Promise(function(resolve, reject) {\r\n      navigator.geolocation.getCurrentPosition(resolve, reject);\r\n    });\r\n  }\r\n\r\nexport const linkDataStore = {\r\n    data: () => [],\r\n    //dataRef: DB.ref('data'),\r\n    useRemoteServer: true,\r\n    async initData () {\r\n        let lat=0\r\n        let long=0\r\n        const position = await getCoordinates(); \r\n        lat = position.coords.latitude;\r\n        long = position.coords.longitude;\r\n        lat=lat+'';\r\n        long=long+'';\r\n        this.data = await getJSON(DATA_URL, 'api/getLinks?lat='+lat+'&long='+long);\r\n        console.log(`Getting initial version of data`);\r\n    },\r\n    // change title of group at the given index\r\n    // NOTE, if index can change, then should use a unique ID instead\r\n    async setTitle (index, newTitle) {\r\n        console.log(`Setting title from ${this.data[index].title} to ${newTitle}`);\r\n        // coming soon ...\r\n    },\r\n    // add new link to group at the given index\r\n    // NOTE, if index can change, then should use a unique ID instead\r\n    async addLink (index, newLink) {\r\n        console.log(`Adding new link ${newLink.name} to group ${this.data[index].title}`);\r\n        // coming soon ...\r\n    }\r\n};\r\n"]}]}