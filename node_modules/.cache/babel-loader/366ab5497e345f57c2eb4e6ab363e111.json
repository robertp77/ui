{"remainingRequest":"C:\\Users\\arobu\\portfolio_rap55\\finalproject\\ui\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\arobu\\portfolio_rap55\\finalproject\\ui\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\arobu\\portfolio_rap55\\finalproject\\ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\arobu\\portfolio_rap55\\finalproject\\ui\\src\\components\\TheMap.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\arobu\\portfolio_rap55\\finalproject\\ui\\src\\components\\TheMap.vue","mtime":1619031877921},{"path":"C:\\Users\\arobu\\portfolio_rap55\\finalproject\\ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\arobu\\portfolio_rap55\\finalproject\\ui\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\arobu\\portfolio_rap55\\finalproject\\ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\arobu\\portfolio_rap55\\finalproject\\ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["TheMap.vue"],"names":[],"mappings":"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","sourcesContent":["/*\r\n * This represents displaying a group of links.\r\n *\r\n * This is an example of a convenience component that serves to organize the data hierarchy.\r\n * It re-emits the custom events of its child components, adding its own information to them\r\n * to provide for future data accessor methods.\r\n *\r\n * @author Dennis Quan\r\n * @author Robert Duvall\r\n */\r\n\r\n// display group as a column or cards that is organized by BootstrapVue\r\n<template>\r\n    <div id=\"mapwrap\">\r\n        <div id=\"mapContainer\"></div>\r\n        <b-button id=\"request\" @click=\"setpickup\">{{reqstatus}}</b-button>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport * as L from 'leaflet';\r\nimport { GeoSearchControl, OpenStreetMapProvider } from 'leaflet-geosearch';\r\nimport '../../node_modules/leaflet/dist/leaflet.css';\r\nimport '../../node_modules/leaflet-geosearch/dist/geosearch.css';\r\nimport image from './Images/pin.png' \r\nexport default {\r\n    name: 'TheMap',\r\n    props: {\r\n        // group to be displayed\r\n        theLat: {\r\n            type: String,\r\n            required: true,\r\n        },\r\n        theLong: {\r\n            type: String,\r\n            required: true,\r\n        }\r\n    },\r\n    data () {\r\n        return {\r\n            // backing data for edits using v-model, no copy needed since Strings are immutable\r\n            map: 'test',\r\n            pickuploc:'init',\r\n            reqstatus: 'request ride',\r\n            provider: 'test',\r\n            searchControl: 'test'\r\n            // may also need a copy group information if there is any chance it might be changed interactively\r\n        };\r\n    },\r\n    methods: {\r\n        // emit event that signals a new link is ready to be added\r\n        // NOTE, error checking is done in the child component\r\n        async getrides(){\r\n            const response = await fetch('api/getLinks?lat='+this.theLat+'&long='+this.theLong);\r\n            return response.json();\r\n        },\r\n        work(value){\r\n            console.log(value.location)\r\n            this.pickuploc.setLatLng([value.location.y,value.location.x])\r\n        },\r\n        setpickup(){\r\n            if(this.reqstatus=='request ride'){\r\n                this.reqstatus='confirm pickup'\r\n                let pinIcon = L.icon({\r\n                    iconUrl: image,\r\n                    iconSize: [20,20],\r\n                    iconAnchor: [10,20]\r\n                });\r\n                this.pickuploc = L.marker([this.theLat, this.theLong], {\r\n                    icon: pinIcon,\r\n                    draggable: 'True'\r\n                }).addTo(this.map);\r\n                this.provider = new OpenStreetMapProvider();\r\n                this.searchControl = new GeoSearchControl({\r\n                    provider: this.provider,\r\n                    showMarker: false\r\n                });\r\n                this.map.addControl(this.searchControl);\r\n                this.map.on('geosearch/showlocation', this.work);\r\n                //var setloc=L.popup()\r\n                //let customPopUpOptions  = {closeButton: false, closeOnClick: false}\r\n                //this.pickuploc.bindPopup(setloc, customPopUpOptions).openPopup();\r\n            }\r\n        },\r\n        async setupmap(){\r\n            this.map = L.map('mapContainer').setView([this.theLat, this.theLong], 13);\r\n            L.tileLayer('https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token=pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4NXVycTA2emYycXBndHRqcmZ3N3gifQ.rJcFIG214AriISLbB6B5aw', {\r\n                maxZoom: 18,\r\n                attribution: 'Map data &copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors, ' +\r\n                    'Imagery © <a href=\"https://www.mapbox.com/\">Mapbox</a>',\r\n                id: 'mapbox/streets-v11',\r\n                tileSize: 512,\r\n                zoomOffset: -1\r\n            }).addTo(this.map);\r\n            let circle = L.circle([this.theLat, this.theLong], {\r\n                color: 'blue',\r\n                fillColor: 'blue',\r\n                fillOpacity: 0.5,\r\n                radius: 25,\r\n            }).addTo(this.map);\r\n            circle.bindPopup('<h4>Your Location</h4>').openPopup();\r\n            const thedat=await this.getrides()\r\n            for(let i=1;i<thedat.length;i++){\r\n                var polygon = L.polygon([\r\n                [thedat[i].requestedpickuplat, thedat[i].requestedpickuplong],\r\n                [thedat[i].requesteddropofflat, thedat[i].requesteddropofflong]\r\n                ]).addTo(this.map);\r\n                polygon.bindPopup('<h4>'+thedat[i].name+'</h4>').openPopup();\r\n                let circle = L.circle([thedat[i].requestedpickuplat, thedat[i].requestedpickuplong], {\r\n                    color: 'blue',\r\n                    fillColor: 'blue',\r\n                    fillOpacity: 0.5,\r\n                    radius: 25,\r\n                }).addTo(this.map);\r\n                circle.bindPopup('<h4>'+thedat[i].name+'</h4>').openPopup();\r\n                let circle2 = L.circle([thedat[i].requesteddropofflat, thedat[i].requesteddropofflong], {\r\n                    color: 'red',\r\n                    fillColor: 'red',\r\n                    fillOpacity: 0.5,\r\n                    radius: 25,\r\n                }).addTo(this.map);\r\n                circle2.bindPopup('<h4>'+thedat[i].name+'</h4>').openPopup();\r\n            }\r\n        },\r\n        addLink (newLink) {\r\n            console.log(`EVENT: add new item ${newLink.name} to ${this.linkGroup.title}`);\r\n            this.$emit('new-link', this.groupId, newLink);\r\n            // may also do additional work related to logging, interactivity, or other tracking changes\r\n        }\r\n    },\r\n\r\n    mounted () {\r\n        this.setupmap();\r\n        /*\r\n        var thelat=0\r\n        var thelong=0\r\n        console.log(999)\r\n        function success(position) {\r\n            thelat=position.coords.latitude;\r\n            thelong=position.coords.longitude;\r\n        }\r\n        \r\n        function error() {\r\n            console.log('Unable to retrieve your location');\r\n        }\r\n        \r\n        if(!navigator.geolocation) {\r\n            console.log('Geolocation is not supported by your browser');\r\n        } else {\r\n            navigator.geolocation.getCurrentPosition(success, error);\r\n        }\r\n        const mymap = L.map('mapid').setView([thelat, thelong], 13);\r\n        L.tileLayer('https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token=pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4NXVycTA2emYycXBndHRqcmZ3N3gifQ.rJcFIG214AriISLbB6B5aw', {\r\n            maxZoom: 18,\r\n            attribution: 'Map data &copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors, ' +\r\n                'Imagery © <a href=\"https://www.mapbox.com/\">Mapbox</a>',\r\n            id: 'mapbox/streets-v11',\r\n            tileSize: 512,\r\n            zoomOffset: -1\r\n        }).addTo(mymap);\r\n        for(let i=1;i<this.allLinks.data.length;i++){\r\n            var polygon = L.polygon([\r\n            [this.allLinks.data[i].requestedpickuplat, this.allLinks.data.users[i].requestedpickuplong],\r\n            [this.allLinks.data[i].requesteddropofflat, this.allLinks.data.users[i].requesteddropofflong]\r\n            ]).addTo(mymap);\r\n            polygon.bindPopup('<h4>'+this.allLinks.data[i].name+'</h4>').openPopup();\r\n            let circle = L.circle([this.allLinks.data[i].requestedpickuplat, this.allLinks.data[i].requestedpickuplong], {\r\n                color: 'blue',\r\n                fillColor: 'blue',\r\n                fillOpacity: 0.5,\r\n                radius: 25,\r\n            }).addTo(mymap);\r\n            circle.bindPopup('<h4>'+this.allLinks.data[i].name+'</h4>').openPopup();\r\n            let circle2 = L.circle([this.allLinks.data[i].requesteddropofflat, this.allLinks.data[i].requesteddropofflong], {\r\n                color: 'red',\r\n                fillColor: 'red',\r\n                fillOpacity: 0.5,\r\n                radius: 25,\r\n            }).addTo(mymap);\r\n            circle2.bindPopup('<h4>'+this.allLinks.data[i].name+'</h4>').openPopup();\r\n        }\r\n        */\r\n    }\r\n}\r\n</script>\r\n<style scoped>\r\n#mapContainer {\r\n width: 80vw;\r\n height: 100vh;\r\n}\r\n#request {\r\n    position: absolute;\r\n    bottom: 425px;\r\n    width: 10%;\r\n    z-index: 9999;\r\n}\r\n</style>"],"sourceRoot":"src/components"}]}